{"ast":null,"code":"// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * @fileoverview Contains several classes for handling commands.\n */\n'use strict';\n/**\n * Describes a command to execute.\n * @final\n */\n\nvar _classCallCheck = require(\"C:/Users/NeverMind/IntelliJIDEAProjects/argon-dashboard-angular-master/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/NeverMind/IntelliJIDEAProjects/argon-dashboard-angular-master/node_modules/@babel/runtime/helpers/createClass\");\n\nvar Command = /*#__PURE__*/function () {\n  /** @param {string} name The name of this command. */\n  function Command(name) {\n    _classCallCheck(this, Command);\n\n    /** @private {string} */\n    this.name_ = name;\n    /** @private {!Object<*>} */\n\n    this.parameters_ = {};\n  }\n  /** @return {string} This command's name. */\n\n\n  _createClass(Command, [{\n    key: \"getName\",\n    value: function getName() {\n      return this.name_;\n    }\n    /**\n     * Sets a parameter to send with this command.\n     * @param {string} name The parameter name.\n     * @param {*} value The parameter value.\n     * @return {!Command} A self reference.\n     */\n\n  }, {\n    key: \"setParameter\",\n    value: function setParameter(name, value) {\n      this.parameters_[name] = value;\n      return this;\n    }\n    /**\n     * Sets the parameters for this command.\n     * @param {!Object<*>} parameters The command parameters.\n     * @return {!Command} A self reference.\n     */\n\n  }, {\n    key: \"setParameters\",\n    value: function setParameters(parameters) {\n      this.parameters_ = parameters;\n      return this;\n    }\n    /**\n     * Returns a named command parameter.\n     * @param {string} key The parameter key to look up.\n     * @return {*} The parameter value, or undefined if it has not been set.\n     */\n\n  }, {\n    key: \"getParameter\",\n    value: function getParameter(key) {\n      return this.parameters_[key];\n    }\n    /**\n     * @return {!Object<*>} The parameters to send with this command.\n     */\n\n  }, {\n    key: \"getParameters\",\n    value: function getParameters() {\n      return this.parameters_;\n    }\n  }]);\n\n  return Command;\n}();\n/**\n * Enumeration of predefined names command names that all command processors\n * will support.\n * @enum {string}\n */\n// TODO: Delete obsolete command names.\n\n\nvar Name = {\n  GET_SERVER_STATUS: 'getStatus',\n  NEW_SESSION: 'newSession',\n  GET_SESSIONS: 'getSessions',\n  DESCRIBE_SESSION: 'getSessionCapabilities',\n  CLOSE: 'close',\n  QUIT: 'quit',\n  GET_CURRENT_URL: 'getCurrentUrl',\n  GET: 'get',\n  GO_BACK: 'goBack',\n  GO_FORWARD: 'goForward',\n  REFRESH: 'refresh',\n  ADD_COOKIE: 'addCookie',\n  GET_COOKIE: 'getCookie',\n  GET_ALL_COOKIES: 'getCookies',\n  DELETE_COOKIE: 'deleteCookie',\n  DELETE_ALL_COOKIES: 'deleteAllCookies',\n  GET_ACTIVE_ELEMENT: 'getActiveElement',\n  FIND_ELEMENT: 'findElement',\n  FIND_ELEMENTS: 'findElements',\n  FIND_CHILD_ELEMENT: 'findChildElement',\n  FIND_CHILD_ELEMENTS: 'findChildElements',\n  CLEAR_ELEMENT: 'clearElement',\n  CLICK_ELEMENT: 'clickElement',\n  SEND_KEYS_TO_ELEMENT: 'sendKeysToElement',\n  SUBMIT_ELEMENT: 'submitElement',\n  GET_CURRENT_WINDOW_HANDLE: 'getCurrentWindowHandle',\n  GET_WINDOW_HANDLES: 'getWindowHandles',\n  GET_WINDOW_POSITION: 'getWindowPosition',\n  SET_WINDOW_POSITION: 'setWindowPosition',\n  GET_WINDOW_SIZE: 'getWindowSize',\n  SET_WINDOW_SIZE: 'setWindowSize',\n  MAXIMIZE_WINDOW: 'maximizeWindow',\n  SWITCH_TO_WINDOW: 'switchToWindow',\n  SWITCH_TO_FRAME: 'switchToFrame',\n  GET_PAGE_SOURCE: 'getPageSource',\n  GET_TITLE: 'getTitle',\n  EXECUTE_SCRIPT: 'executeScript',\n  EXECUTE_ASYNC_SCRIPT: 'executeAsyncScript',\n  GET_ELEMENT_TEXT: 'getElementText',\n  GET_ELEMENT_TAG_NAME: 'getElementTagName',\n  IS_ELEMENT_SELECTED: 'isElementSelected',\n  IS_ELEMENT_ENABLED: 'isElementEnabled',\n  IS_ELEMENT_DISPLAYED: 'isElementDisplayed',\n  GET_ELEMENT_LOCATION: 'getElementLocation',\n  GET_ELEMENT_LOCATION_IN_VIEW: 'getElementLocationOnceScrolledIntoView',\n  GET_ELEMENT_SIZE: 'getElementSize',\n  GET_ELEMENT_ATTRIBUTE: 'getElementAttribute',\n  GET_ELEMENT_VALUE_OF_CSS_PROPERTY: 'getElementValueOfCssProperty',\n  ELEMENT_EQUALS: 'elementEquals',\n  SCREENSHOT: 'screenshot',\n  TAKE_ELEMENT_SCREENSHOT: 'takeElementScreenshot',\n  IMPLICITLY_WAIT: 'implicitlyWait',\n  SET_SCRIPT_TIMEOUT: 'setScriptTimeout',\n  GET_TIMEOUT: 'getTimeout',\n  SET_TIMEOUT: 'setTimeout',\n  ACCEPT_ALERT: 'acceptAlert',\n  DISMISS_ALERT: 'dismissAlert',\n  GET_ALERT_TEXT: 'getAlertText',\n  SET_ALERT_TEXT: 'setAlertValue',\n  SET_ALERT_CREDENTIALS: 'setAlertCredentials',\n  EXECUTE_SQL: 'executeSQL',\n  GET_LOCATION: 'getLocation',\n  SET_LOCATION: 'setLocation',\n  GET_APP_CACHE: 'getAppCache',\n  GET_APP_CACHE_STATUS: 'getStatus',\n  CLEAR_APP_CACHE: 'clearAppCache',\n  IS_BROWSER_ONLINE: 'isBrowserOnline',\n  SET_BROWSER_ONLINE: 'setBrowserOnline',\n  GET_LOCAL_STORAGE_ITEM: 'getLocalStorageItem',\n  GET_LOCAL_STORAGE_KEYS: 'getLocalStorageKeys',\n  SET_LOCAL_STORAGE_ITEM: 'setLocalStorageItem',\n  REMOVE_LOCAL_STORAGE_ITEM: 'removeLocalStorageItem',\n  CLEAR_LOCAL_STORAGE: 'clearLocalStorage',\n  GET_LOCAL_STORAGE_SIZE: 'getLocalStorageSize',\n  GET_SESSION_STORAGE_ITEM: 'getSessionStorageItem',\n  GET_SESSION_STORAGE_KEYS: 'getSessionStorageKey',\n  SET_SESSION_STORAGE_ITEM: 'setSessionStorageItem',\n  REMOVE_SESSION_STORAGE_ITEM: 'removeSessionStorageItem',\n  CLEAR_SESSION_STORAGE: 'clearSessionStorage',\n  GET_SESSION_STORAGE_SIZE: 'getSessionStorageSize',\n  SET_SCREEN_ORIENTATION: 'setScreenOrientation',\n  GET_SCREEN_ORIENTATION: 'getScreenOrientation',\n  // These belong to the Advanced user interactions - an element is\n  // optional for these commands.\n  CLICK: 'mouseClick',\n  DOUBLE_CLICK: 'mouseDoubleClick',\n  MOUSE_DOWN: 'mouseButtonDown',\n  MOUSE_UP: 'mouseButtonUp',\n  MOVE_TO: 'mouseMoveTo',\n  SEND_KEYS_TO_ACTIVE_ELEMENT: 'sendKeysToActiveElement',\n  // These belong to the Advanced Touch API\n  TOUCH_SINGLE_TAP: 'touchSingleTap',\n  TOUCH_DOWN: 'touchDown',\n  TOUCH_UP: 'touchUp',\n  TOUCH_MOVE: 'touchMove',\n  TOUCH_SCROLL: 'touchScroll',\n  TOUCH_DOUBLE_TAP: 'touchDoubleTap',\n  TOUCH_LONG_PRESS: 'touchLongPress',\n  TOUCH_FLICK: 'touchFlick',\n  GET_AVAILABLE_LOG_TYPES: 'getAvailableLogTypes',\n  GET_LOG: 'getLog',\n  GET_SESSION_LOGS: 'getSessionLogs',\n  // Non-standard commands used by the standalone Selenium server.\n  UPLOAD_FILE: 'uploadFile'\n};\n/**\n * Handles the execution of WebDriver {@link Command commands}.\n * @interface\n */\n\nvar Executor = /*#__PURE__*/function () {\n  function Executor() {\n    _classCallCheck(this, Executor);\n  }\n\n  _createClass(Executor, [{\n    key: \"execute\",\n\n    /**\n     * Executes the given {@code command}. If there is an error executing the\n     * command, the provided callback will be invoked with the offending error.\n     * Otherwise, the callback will be invoked with a null Error and non-null\n     * response object.\n     *\n     * @param {!Command} command The command to execute.\n     * @return {!Promise<?>} A promise that will be fulfilled with the command\n     *     result.\n     */\n    value: function execute(command) {}\n  }]);\n\n  return Executor;\n}(); // PUBLIC API\n\n\nmodule.exports = {\n  Command: Command,\n  Name: Name,\n  Executor: Executor\n};","map":{"version":3,"sources":["C:/Users/NeverMind/IntelliJIDEAProjects/argon-dashboard-angular-master/node_modules/selenium-webdriver/lib/command.js"],"names":["Command","name","name_","parameters_","value","parameters","key","Name","GET_SERVER_STATUS","NEW_SESSION","GET_SESSIONS","DESCRIBE_SESSION","CLOSE","QUIT","GET_CURRENT_URL","GET","GO_BACK","GO_FORWARD","REFRESH","ADD_COOKIE","GET_COOKIE","GET_ALL_COOKIES","DELETE_COOKIE","DELETE_ALL_COOKIES","GET_ACTIVE_ELEMENT","FIND_ELEMENT","FIND_ELEMENTS","FIND_CHILD_ELEMENT","FIND_CHILD_ELEMENTS","CLEAR_ELEMENT","CLICK_ELEMENT","SEND_KEYS_TO_ELEMENT","SUBMIT_ELEMENT","GET_CURRENT_WINDOW_HANDLE","GET_WINDOW_HANDLES","GET_WINDOW_POSITION","SET_WINDOW_POSITION","GET_WINDOW_SIZE","SET_WINDOW_SIZE","MAXIMIZE_WINDOW","SWITCH_TO_WINDOW","SWITCH_TO_FRAME","GET_PAGE_SOURCE","GET_TITLE","EXECUTE_SCRIPT","EXECUTE_ASYNC_SCRIPT","GET_ELEMENT_TEXT","GET_ELEMENT_TAG_NAME","IS_ELEMENT_SELECTED","IS_ELEMENT_ENABLED","IS_ELEMENT_DISPLAYED","GET_ELEMENT_LOCATION","GET_ELEMENT_LOCATION_IN_VIEW","GET_ELEMENT_SIZE","GET_ELEMENT_ATTRIBUTE","GET_ELEMENT_VALUE_OF_CSS_PROPERTY","ELEMENT_EQUALS","SCREENSHOT","TAKE_ELEMENT_SCREENSHOT","IMPLICITLY_WAIT","SET_SCRIPT_TIMEOUT","GET_TIMEOUT","SET_TIMEOUT","ACCEPT_ALERT","DISMISS_ALERT","GET_ALERT_TEXT","SET_ALERT_TEXT","SET_ALERT_CREDENTIALS","EXECUTE_SQL","GET_LOCATION","SET_LOCATION","GET_APP_CACHE","GET_APP_CACHE_STATUS","CLEAR_APP_CACHE","IS_BROWSER_ONLINE","SET_BROWSER_ONLINE","GET_LOCAL_STORAGE_ITEM","GET_LOCAL_STORAGE_KEYS","SET_LOCAL_STORAGE_ITEM","REMOVE_LOCAL_STORAGE_ITEM","CLEAR_LOCAL_STORAGE","GET_LOCAL_STORAGE_SIZE","GET_SESSION_STORAGE_ITEM","GET_SESSION_STORAGE_KEYS","SET_SESSION_STORAGE_ITEM","REMOVE_SESSION_STORAGE_ITEM","CLEAR_SESSION_STORAGE","GET_SESSION_STORAGE_SIZE","SET_SCREEN_ORIENTATION","GET_SCREEN_ORIENTATION","CLICK","DOUBLE_CLICK","MOUSE_DOWN","MOUSE_UP","MOVE_TO","SEND_KEYS_TO_ACTIVE_ELEMENT","TOUCH_SINGLE_TAP","TOUCH_DOWN","TOUCH_UP","TOUCH_MOVE","TOUCH_SCROLL","TOUCH_DOUBLE_TAP","TOUCH_LONG_PRESS","TOUCH_FLICK","GET_AVAILABLE_LOG_TYPES","GET_LOG","GET_SESSION_LOGS","UPLOAD_FILE","Executor","command","module","exports"],"mappings":"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","sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * @fileoverview Contains several classes for handling commands.\n */\n\n'use strict';\n\n/**\n * Describes a command to execute.\n * @final\n */\nclass Command {\n  /** @param {string} name The name of this command. */\n  constructor(name) {\n    /** @private {string} */\n    this.name_ = name;\n\n    /** @private {!Object<*>} */\n    this.parameters_ = {};\n  }\n\n  /** @return {string} This command's name. */\n  getName() {\n    return this.name_;\n  }\n\n  /**\n   * Sets a parameter to send with this command.\n   * @param {string} name The parameter name.\n   * @param {*} value The parameter value.\n   * @return {!Command} A self reference.\n   */\n  setParameter(name, value) {\n    this.parameters_[name] = value;\n    return this;\n  }\n\n  /**\n   * Sets the parameters for this command.\n   * @param {!Object<*>} parameters The command parameters.\n   * @return {!Command} A self reference.\n   */\n  setParameters(parameters) {\n    this.parameters_ = parameters;\n    return this;\n  }\n\n  /**\n   * Returns a named command parameter.\n   * @param {string} key The parameter key to look up.\n   * @return {*} The parameter value, or undefined if it has not been set.\n   */\n  getParameter(key) {\n    return this.parameters_[key];\n  }\n\n  /**\n   * @return {!Object<*>} The parameters to send with this command.\n   */\n  getParameters() {\n    return this.parameters_;\n  }\n}\n\n\n/**\n * Enumeration of predefined names command names that all command processors\n * will support.\n * @enum {string}\n */\n// TODO: Delete obsolete command names.\nconst Name = {\n  GET_SERVER_STATUS: 'getStatus',\n\n  NEW_SESSION: 'newSession',\n  GET_SESSIONS: 'getSessions',\n  DESCRIBE_SESSION: 'getSessionCapabilities',\n\n  CLOSE: 'close',\n  QUIT: 'quit',\n\n  GET_CURRENT_URL: 'getCurrentUrl',\n  GET: 'get',\n  GO_BACK: 'goBack',\n  GO_FORWARD: 'goForward',\n  REFRESH: 'refresh',\n\n  ADD_COOKIE: 'addCookie',\n  GET_COOKIE: 'getCookie',\n  GET_ALL_COOKIES: 'getCookies',\n  DELETE_COOKIE: 'deleteCookie',\n  DELETE_ALL_COOKIES: 'deleteAllCookies',\n\n  GET_ACTIVE_ELEMENT: 'getActiveElement',\n  FIND_ELEMENT: 'findElement',\n  FIND_ELEMENTS: 'findElements',\n  FIND_CHILD_ELEMENT: 'findChildElement',\n  FIND_CHILD_ELEMENTS: 'findChildElements',\n\n  CLEAR_ELEMENT: 'clearElement',\n  CLICK_ELEMENT: 'clickElement',\n  SEND_KEYS_TO_ELEMENT: 'sendKeysToElement',\n  SUBMIT_ELEMENT: 'submitElement',\n\n  GET_CURRENT_WINDOW_HANDLE: 'getCurrentWindowHandle',\n  GET_WINDOW_HANDLES: 'getWindowHandles',\n  GET_WINDOW_POSITION: 'getWindowPosition',\n  SET_WINDOW_POSITION: 'setWindowPosition',\n  GET_WINDOW_SIZE: 'getWindowSize',\n  SET_WINDOW_SIZE: 'setWindowSize',\n  MAXIMIZE_WINDOW: 'maximizeWindow',\n\n  SWITCH_TO_WINDOW: 'switchToWindow',\n  SWITCH_TO_FRAME: 'switchToFrame',\n  GET_PAGE_SOURCE: 'getPageSource',\n  GET_TITLE: 'getTitle',\n\n  EXECUTE_SCRIPT: 'executeScript',\n  EXECUTE_ASYNC_SCRIPT: 'executeAsyncScript',\n\n  GET_ELEMENT_TEXT: 'getElementText',\n  GET_ELEMENT_TAG_NAME: 'getElementTagName',\n  IS_ELEMENT_SELECTED: 'isElementSelected',\n  IS_ELEMENT_ENABLED: 'isElementEnabled',\n  IS_ELEMENT_DISPLAYED: 'isElementDisplayed',\n  GET_ELEMENT_LOCATION: 'getElementLocation',\n  GET_ELEMENT_LOCATION_IN_VIEW: 'getElementLocationOnceScrolledIntoView',\n  GET_ELEMENT_SIZE: 'getElementSize',\n  GET_ELEMENT_ATTRIBUTE: 'getElementAttribute',\n  GET_ELEMENT_VALUE_OF_CSS_PROPERTY: 'getElementValueOfCssProperty',\n  ELEMENT_EQUALS: 'elementEquals',\n\n  SCREENSHOT: 'screenshot',\n  TAKE_ELEMENT_SCREENSHOT: 'takeElementScreenshot',\n  IMPLICITLY_WAIT: 'implicitlyWait',\n  SET_SCRIPT_TIMEOUT: 'setScriptTimeout',\n\n  GET_TIMEOUT: 'getTimeout',\n  SET_TIMEOUT: 'setTimeout',\n\n  ACCEPT_ALERT: 'acceptAlert',\n  DISMISS_ALERT: 'dismissAlert',\n  GET_ALERT_TEXT: 'getAlertText',\n  SET_ALERT_TEXT: 'setAlertValue',\n  SET_ALERT_CREDENTIALS: 'setAlertCredentials',\n\n  EXECUTE_SQL: 'executeSQL',\n  GET_LOCATION: 'getLocation',\n  SET_LOCATION: 'setLocation',\n  GET_APP_CACHE: 'getAppCache',\n  GET_APP_CACHE_STATUS: 'getStatus',\n  CLEAR_APP_CACHE: 'clearAppCache',\n  IS_BROWSER_ONLINE: 'isBrowserOnline',\n  SET_BROWSER_ONLINE: 'setBrowserOnline',\n\n  GET_LOCAL_STORAGE_ITEM: 'getLocalStorageItem',\n  GET_LOCAL_STORAGE_KEYS: 'getLocalStorageKeys',\n  SET_LOCAL_STORAGE_ITEM: 'setLocalStorageItem',\n  REMOVE_LOCAL_STORAGE_ITEM: 'removeLocalStorageItem',\n  CLEAR_LOCAL_STORAGE: 'clearLocalStorage',\n  GET_LOCAL_STORAGE_SIZE: 'getLocalStorageSize',\n\n  GET_SESSION_STORAGE_ITEM: 'getSessionStorageItem',\n  GET_SESSION_STORAGE_KEYS: 'getSessionStorageKey',\n  SET_SESSION_STORAGE_ITEM: 'setSessionStorageItem',\n  REMOVE_SESSION_STORAGE_ITEM: 'removeSessionStorageItem',\n  CLEAR_SESSION_STORAGE: 'clearSessionStorage',\n  GET_SESSION_STORAGE_SIZE: 'getSessionStorageSize',\n\n  SET_SCREEN_ORIENTATION: 'setScreenOrientation',\n  GET_SCREEN_ORIENTATION: 'getScreenOrientation',\n\n  // These belong to the Advanced user interactions - an element is\n  // optional for these commands.\n  CLICK: 'mouseClick',\n  DOUBLE_CLICK: 'mouseDoubleClick',\n  MOUSE_DOWN: 'mouseButtonDown',\n  MOUSE_UP: 'mouseButtonUp',\n  MOVE_TO: 'mouseMoveTo',\n  SEND_KEYS_TO_ACTIVE_ELEMENT: 'sendKeysToActiveElement',\n\n  // These belong to the Advanced Touch API\n  TOUCH_SINGLE_TAP: 'touchSingleTap',\n  TOUCH_DOWN: 'touchDown',\n  TOUCH_UP: 'touchUp',\n  TOUCH_MOVE: 'touchMove',\n  TOUCH_SCROLL: 'touchScroll',\n  TOUCH_DOUBLE_TAP: 'touchDoubleTap',\n  TOUCH_LONG_PRESS: 'touchLongPress',\n  TOUCH_FLICK: 'touchFlick',\n\n  GET_AVAILABLE_LOG_TYPES: 'getAvailableLogTypes',\n  GET_LOG: 'getLog',\n  GET_SESSION_LOGS: 'getSessionLogs',\n\n  // Non-standard commands used by the standalone Selenium server.\n  UPLOAD_FILE: 'uploadFile'\n};\n\n\n\n/**\n * Handles the execution of WebDriver {@link Command commands}.\n * @interface\n */\nclass Executor {\n  /**\n   * Executes the given {@code command}. If there is an error executing the\n   * command, the provided callback will be invoked with the offending error.\n   * Otherwise, the callback will be invoked with a null Error and non-null\n   * response object.\n   *\n   * @param {!Command} command The command to execute.\n   * @return {!Promise<?>} A promise that will be fulfilled with the command\n   *     result.\n   */\n  execute(command) {}\n}\n\n\n\n// PUBLIC API\n\n\nmodule.exports = {\n  Command: Command,\n  Name: Name,\n  Executor: Executor\n};\n"]},"metadata":{},"sourceType":"script"}