{"ast":null,"code":"// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n'use strict';\n\nvar _classCallCheck = require(\"C:/Users/NeverMind/IntelliJIDEAProjects/argon-dashboard-angular-master/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/NeverMind/IntelliJIDEAProjects/argon-dashboard-angular-master/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _require = require('./capabilities'),\n    Capabilities = _require.Capabilities;\n/**\n * Contains information about a single WebDriver session.\n */\n\n\nvar Session = /*#__PURE__*/function () {\n  /**\n   * @param {string} id The session ID.\n   * @param {!(Object|Capabilities)} capabilities The session\n   *     capabilities.\n   */\n  function Session(id, capabilities) {\n    _classCallCheck(this, Session);\n\n    /** @private {string} */\n    this.id_ = id;\n    /** @private {!Capabilities} */\n\n    this.caps_ = capabilities instanceof Capabilities ?\n    /** @type {!Capabilities} */\n    capabilities : new Capabilities(capabilities);\n  }\n  /**\n   * @return {string} This session's ID.\n   */\n\n\n  _createClass(Session, [{\n    key: \"getId\",\n    value: function getId() {\n      return this.id_;\n    }\n    /**\n     * @return {!Capabilities} This session's capabilities.\n     */\n\n  }, {\n    key: \"getCapabilities\",\n    value: function getCapabilities() {\n      return this.caps_;\n    }\n    /**\n     * Retrieves the value of a specific capability.\n     * @param {string} key The capability to retrieve.\n     * @return {*} The capability value.\n     */\n\n  }, {\n    key: \"getCapability\",\n    value: function getCapability(key) {\n      return this.caps_.get(key);\n    }\n    /**\n     * Returns the JSON representation of this object, which is just the string\n     * session ID.\n     * @return {string} The JSON representation of this Session.\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.getId();\n    }\n  }]);\n\n  return Session;\n}(); // PUBLIC API\n\n\nmodule.exports = {\n  Session: Session\n};","map":{"version":3,"sources":["C:/Users/NeverMind/IntelliJIDEAProjects/argon-dashboard-angular-master/node_modules/selenium-webdriver/lib/session.js"],"names":["require","Capabilities","Session","id","capabilities","id_","caps_","key","get","getId","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;eAEuBA,OAAO,CAAC,gBAAD,C;IAAvBC,Y,YAAAA,Y;AAGP;AACA;AACA;;;IACMC,O;AAEJ;AACF;AACA;AACA;AACA;AACE,mBAAYC,EAAZ,EAAgBC,YAAhB,EAA8B;AAAA;;AAC5B;AACA,SAAKC,GAAL,GAAWF,EAAX;AAEA;;AACA,SAAKG,KAAL,GAAaF,YAAY,YAAYH,YAAxB;AACP;AAA6BG,IAAAA,YADtB,GAEP,IAAIH,YAAJ,CAAiBG,YAAjB,CAFN;AAGD;AAED;AACF;AACA;;;;;4BACU;AACN,aAAO,KAAKC,GAAZ;AACD;AAED;AACF;AACA;;;;sCACoB;AAChB,aAAO,KAAKC,KAAZ;AACD;AAED;AACF;AACA;AACA;AACA;;;;kCACgBC,G,EAAK;AACjB,aAAO,KAAKD,KAAL,CAAWE,GAAX,CAAeD,GAAf,CAAP;AACD;AAED;AACF;AACA;AACA;AACA;;;;6BACW;AACP,aAAO,KAAKE,KAAL,EAAP;AACD;;;;KAIH;;;AAGAC,MAAM,CAACC,OAAP,GAAiB;AAACT,EAAAA,OAAO,EAAEA;AAAV,CAAjB","sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n'use strict';\n\nconst {Capabilities} = require('./capabilities');\n\n\n/**\n * Contains information about a single WebDriver session.\n */\nclass Session {\n\n  /**\n   * @param {string} id The session ID.\n   * @param {!(Object|Capabilities)} capabilities The session\n   *     capabilities.\n   */\n  constructor(id, capabilities) {\n    /** @private {string} */\n    this.id_ = id;\n\n    /** @private {!Capabilities} */\n    this.caps_ = capabilities instanceof Capabilities\n        ? /** @type {!Capabilities} */(capabilities)\n        : new Capabilities(capabilities);\n  }\n\n  /**\n   * @return {string} This session's ID.\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {!Capabilities} This session's capabilities.\n   */\n  getCapabilities() {\n    return this.caps_;\n  }\n\n  /**\n   * Retrieves the value of a specific capability.\n   * @param {string} key The capability to retrieve.\n   * @return {*} The capability value.\n   */\n  getCapability(key) {\n    return this.caps_.get(key);\n  }\n\n  /**\n   * Returns the JSON representation of this object, which is just the string\n   * session ID.\n   * @return {string} The JSON representation of this Session.\n   */\n  toJSON() {\n    return this.getId();\n  }\n}\n\n\n// PUBLIC API\n\n\nmodule.exports = {Session: Session};\n"]},"metadata":{},"sourceType":"script"}