{"ast":null,"code":"var https = require(\"https\");\n\nvar http = require(\"http\");\n\nvar extend = require(\"./extend\");\n\nvar HttpsProxyAgent = require(\"https-proxy-agent\");\n\nvar userAgent = getUA();\n\nfunction getUA() {\n  var os = require(\"os\");\n\n  var version = require(\"../package.json\").version;\n\n  return os.platform() + \"/\" + os.release() + \" \" + \"node/\" + process.versions.node + \" \" + \"node-browserstack/\" + version;\n}\n\nvar BaseClient = function BaseClient(settings) {\n  if (!settings.username) {\n    throw new Error(\"Username is required.\");\n  }\n\n  if (!settings.password) {\n    throw new Error(\"Password is required.\");\n  }\n\n  extend(this, settings);\n  this.authHeader = \"Basic \" + Buffer.from(this.username + \":\" + this.password).toString(\"base64\");\n};\n\nBaseClient.prototype.request = function (options, data, fn) {\n  if (typeof data === \"function\") {\n    fn = data;\n    data = null;\n  }\n\n  fn = fn || function () {};\n\n  var reqOptions = extend({\n    host: this.server.host,\n    port: this.server.port,\n    method: \"GET\",\n    headers: {\n      authorization: this.authHeader,\n      \"content-type\": \"application/json\",\n      \"user-agent\": userAgent,\n      \"content-length\": typeof data === \"string\" ? data.length : 0\n    },\n    agent: this.proxy ? new HttpsProxyAgent(this.proxy) : null\n  }, options);\n  var req = (this.useHttp ? http : https).request(reqOptions, function (res) {\n    var response = \"\";\n    res.setEncoding(\"utf8\");\n    res.on(\"data\", function (chunk) {\n      response += chunk;\n    });\n    res.on(\"end\", function () {\n      if (res.statusCode !== 200) {\n        var message;\n\n        if (res.headers[\"content-type\"].indexOf(\"json\") !== -1) {\n          response = JSON.parse(response);\n          message = response.message;\n\n          if (response.errors && response.errors.length) {\n            message += \" - \" + response.errors.map(function (error) {\n              return \"`\" + error.field + \"` \" + error.code;\n            }).join(\", \");\n          }\n        } else {\n          message = response;\n        }\n\n        if (!message && res.statusCode === 403) {\n          message = \"Forbidden\";\n        }\n\n        fn(new Error(message));\n      } else {\n        fn(null, JSON.parse(response));\n      }\n    });\n  });\n  req.on(\"error\", fn);\n\n  if (data) {\n    req.write(data);\n  }\n\n  req.end();\n};\n\nmodule.exports = BaseClient;","map":{"version":3,"sources":["C:/Users/NeverMind/IntelliJIDEAProjects/argon-dashboard-angular-master/node_modules/browserstack/lib/client.js"],"names":["https","require","http","extend","HttpsProxyAgent","userAgent","getUA","os","version","platform","release","process","versions","node","BaseClient","settings","username","Error","password","authHeader","Buffer","from","toString","prototype","request","options","data","fn","reqOptions","host","server","port","method","headers","authorization","length","agent","proxy","req","useHttp","res","response","setEncoding","on","chunk","statusCode","message","indexOf","JSON","parse","errors","map","error","field","code","join","write","end","module","exports"],"mappings":"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","sourcesContent":["var https = require(\"https\");\nvar http = require(\"http\");\nvar extend = require(\"./extend\");\nvar HttpsProxyAgent = require(\"https-proxy-agent\");\nvar userAgent = getUA();\n\nfunction getUA() {\n\tvar os = require(\"os\");\n\tvar version = require(\"../package.json\").version;\n\n\treturn os.platform() + \"/\" + os.release() + \" \" +\n\t\t\"node/\" + process.versions.node + \" \" +\n\t\t\"node-browserstack/\" + version;\n}\n\nvar BaseClient = function(settings) {\n\tif (!settings.username) {\n\t\tthrow new Error(\"Username is required.\");\n\t}\n\tif (!settings.password) {\n\t\tthrow new Error(\"Password is required.\");\n\t}\n\n\textend(this, settings);\n\n\tthis.authHeader = \"Basic \" +\n\t\tBuffer.from(this.username + \":\" + this.password).toString(\"base64\");\n};\n\nBaseClient.prototype.request = function(options, data, fn) {\n\tif (typeof data === \"function\") {\n\t\tfn = data;\n\t\tdata = null;\n\t}\n\n\tfn = fn || function() {};\n\n\tvar reqOptions = extend({\n\t\thost: this.server.host,\n\t\tport: this.server.port,\n\t\tmethod: \"GET\",\n\t\theaders: {\n\t\t\tauthorization: this.authHeader,\n\t\t\t\"content-type\": \"application/json\",\n\t\t\t\"user-agent\": userAgent,\n\t\t\t\"content-length\": typeof data === \"string\" ? data.length : 0\n\t\t},\n\t\tagent: (this.proxy) ? new HttpsProxyAgent(this.proxy) : null\n\t}, options);\n\n\tvar req = (this.useHttp ? http : https).request(reqOptions, function(res) {\n\t\tvar response = \"\";\n\t\tres.setEncoding(\"utf8\");\n\t\tres.on(\"data\", function(chunk) {\n\t\t\tresponse += chunk;\n\t\t});\n\t\tres.on(\"end\", function() {\n\t\t\tif (res.statusCode !== 200) {\n\t\t\t\tvar message;\n\t\t\t\tif (res.headers[\"content-type\"].indexOf(\"json\") !== -1) {\n\t\t\t\t\tresponse = JSON.parse(response);\n\t\t\t\t\tmessage = response.message;\n\t\t\t\t\tif (response.errors && response.errors.length) {\n\t\t\t\t\t\tmessage += \" - \" + response.errors.map(function(error) {\n\t\t\t\t\t\t\treturn \"`\" + error.field + \"` \" + error.code;\n\t\t\t\t\t\t}).join(\", \");\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tmessage = response;\n\t\t\t\t}\n\t\t\t\tif (!message && res.statusCode === 403) {\n\t\t\t\t\tmessage = \"Forbidden\";\n\t\t\t\t}\n\t\t\t\tfn(new Error(message));\n\t\t\t} else {\n\t\t\t\tfn(null, JSON.parse(response));\n\t\t\t}\n\t\t});\n\t});\n\n\treq.on(\"error\", fn);\n\n\tif (data) {\n\t\treq.write(data);\n\t}\n\n\treq.end();\n};\n\nmodule.exports = BaseClient;\n"]},"metadata":{},"sourceType":"script"}