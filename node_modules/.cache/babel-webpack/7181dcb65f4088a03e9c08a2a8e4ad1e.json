{"ast":null,"code":"var util = require(\"util\");\n\nvar BaseClient = require(\"./client\");\n\nvar extend = require(\"./extend\");\n\nfunction ApiBaseClient(settings) {\n  this.server = {\n    host: \"api.browserstack.com\"\n  };\n  BaseClient.call(this, settings);\n}\n\nutil.inherits(ApiBaseClient, BaseClient); // public API\n\nextend(ApiBaseClient.prototype, {\n  getBrowsers: function getBrowsers(fn) {\n    this._getBrowsers(function (error, browsers) {\n      if (!error) {\n        this.updateLatest(browsers);\n      }\n\n      fn(error, browsers);\n    }.bind(this));\n  },\n  createWorker: function createWorker(options, fn) {\n    if (options[this.versionField] === \"latest\") {\n      return this.getLatest(options, function (error, version) {\n        if (error) {\n          return fn(error);\n        }\n\n        options = extend({}, options);\n        options[this.versionField] = version;\n        this.createWorker(options, fn);\n      }.bind(this));\n    }\n\n    var data = JSON.stringify(options);\n    this.request({\n      path: this.path(\"/worker\"),\n      method: \"POST\"\n    }, data, fn);\n  },\n  getWorker: function getWorker(id, fn) {\n    this.request({\n      path: this.path(\"/worker/\" + id)\n    }, fn);\n  },\n  changeUrl: function changeUrl(id, options, fn) {\n    var data = JSON.stringify(options);\n    this.request({\n      path: this.path(\"/worker/\" + id + \"/url.json\"),\n      method: \"PUT\"\n    }, data, fn);\n  },\n  terminateWorker: function terminateWorker(id, fn) {\n    this.request({\n      path: this.path(\"/worker/\" + id),\n      method: \"DELETE\"\n    }, fn);\n  },\n  getWorkers: function getWorkers(fn) {\n    this.request({\n      path: this.path(\"/workers\")\n    }, fn);\n  },\n  getLatest: function getLatest(browser, fn) {\n    var latest = this.latest;\n\n    if (typeof browser === \"function\") {\n      fn = browser;\n      browser = null;\n    } // there may be a lot of createWorker() calls with \"latest\" version\n    // so minimize the number of calls to getBrowsers()\n\n\n    if (this.latestPending) {\n      return setTimeout(function () {\n        this.getLatest(browser, fn);\n      }.bind(this), 50);\n    } // only cache browsers for one day\n\n\n    if (!latest || this.latestUpdate < new Date() - 864e5) {\n      this.latestPending = true;\n      return this.getBrowsers(function (error) {\n        this.latestPending = false;\n\n        if (error) {\n          return fn(error);\n        }\n\n        this.getLatest(browser, fn);\n      }.bind(this));\n    }\n\n    process.nextTick(function () {\n      fn(null, browser ? latest[this.getBrowserId(browser)] : extend({}, latest));\n    }.bind(this));\n  },\n  takeScreenshot: function takeScreenshot(id, fn) {\n    this.request({\n      path: this.path(\"/worker/\" + id + \"/screenshot.json\")\n    }, fn);\n  }\n}); // internal API\n\nextend(ApiBaseClient.prototype, {\n  latest: null,\n  latestUpdate: 0,\n  latestPending: false,\n  path: function path(_path) {\n    return \"/\" + this.version + _path;\n  },\n  updateLatest: function updateLatest(browsers) {\n    var latest = this.latest = {};\n    var getBrowserId = this.getBrowserId.bind(this);\n    var versionField = this.versionField;\n    this.latestUpdate = new Date();\n    browsers.forEach(function (browser) {\n      var version = browser[versionField];\n      var browserId = getBrowserId(browser); // ignore devices that don't have versions\n\n      if (!version) {\n        return;\n      } // ignore pre-release versions\n\n\n      if (/\\s/.test(version)) {\n        return;\n      }\n\n      if (parseFloat(version) > (parseFloat(latest[browserId]) || 0)) {\n        latest[browserId] = version;\n      }\n    });\n  },\n  getBrowserId: function getBrowserId(browser) {\n    return this._getBrowserId(browser).toLowerCase();\n  }\n}); // Versions\n\nApiBaseClient.versions = {};\nApiBaseClient.latestVersion = 0;\n\nApiBaseClient.createVersion = function (version, prototype) {\n  function ApiClient(settings) {\n    ApiBaseClient.call(this, settings);\n  }\n\n  util.inherits(ApiClient, ApiBaseClient);\n  ApiClient.prototype.version = version;\n  extend(ApiClient.prototype, prototype);\n  ApiBaseClient.versions[version] = ApiClient;\n  ApiBaseClient.latestVersion = Math.max(ApiBaseClient.latestVersion, version);\n};\n\nApiBaseClient.createVersion(1, {\n  useHttp: true,\n  versionField: \"version\",\n  _getBrowsers: function _getBrowsers(fn) {\n    this.request({\n      path: this.path(\"/browsers\")\n    }, fn);\n  },\n  _getBrowserId: function _getBrowserId(browser) {\n    return browser.browser;\n  }\n});\nApiBaseClient.createVersion(2, {\n  useHttp: true,\n  versionField: \"version\",\n  _getBrowsers: function _getBrowsers(fn) {\n    this.request({\n      path: this.path(\"/browsers\")\n    }, function (error, osBrowsers) {\n      if (error) {\n        return fn(error);\n      }\n\n      fn(null, [].concat.apply([], Object.keys(osBrowsers).map(function (os) {\n        return osBrowsers[os].map(function (browser) {\n          browser.os = os;\n          return browser;\n        });\n      })));\n    });\n  },\n  _getBrowserId: function _getBrowserId(browser) {\n    return browser.os + \":\" + (browser.browser || browser.device);\n  }\n});\nApiBaseClient.createVersion(3, {\n  useHttp: true,\n  versionField: \"browser_version\",\n  _getBrowsers: function _getBrowsers(fn) {\n    this.request({\n      path: this.path(\"/browsers?flat=true\")\n    }, fn);\n  },\n  _getBrowserId: function _getBrowserId(browser) {\n    var id = browser.os + \":\" + browser.os_version + \":\" + browser.browser;\n\n    if (browser.device) {\n      id += \":\" + browser.device;\n    }\n\n    return id;\n  },\n  getApiStatus: function getApiStatus(fn) {\n    this.request({\n      path: this.path(\"/status\")\n    }, fn);\n  }\n});\nApiBaseClient.createVersion(4, {\n  versionField: \"browser_version\",\n  _getBrowsers: function _getBrowsers(fn) {\n    this.request({\n      path: this.path(\"/browsers?flat=true\")\n    }, fn);\n  },\n  _getBrowserId: function _getBrowserId(browser) {\n    var id = browser.os + \":\" + browser.os_version + \":\" + browser.browser;\n\n    if (browser.device) {\n      id += \":\" + browser.device;\n    }\n\n    return id;\n  },\n  getApiStatus: function getApiStatus(fn) {\n    this.request({\n      path: this.path(\"/status\")\n    }, fn);\n  }\n});\nmodule.exports = {\n  createClient: function createClient(settings) {\n    var ApiClient = ApiBaseClient.versions[settings.version || ApiBaseClient.latestVersion];\n\n    if (!ApiClient) {\n      throw new Error(\"Invalid version\");\n    }\n\n    return new ApiClient(settings);\n  }\n};","map":{"version":3,"sources":["C:/Users/NeverMind/IntelliJIDEAProjects/argon-dashboard-angular-master/node_modules/browserstack/lib/api.js"],"names":["util","require","BaseClient","extend","ApiBaseClient","settings","server","host","call","inherits","prototype","getBrowsers","fn","_getBrowsers","error","browsers","updateLatest","bind","createWorker","options","versionField","getLatest","version","data","JSON","stringify","request","path","method","getWorker","id","changeUrl","terminateWorker","getWorkers","browser","latest","latestPending","setTimeout","latestUpdate","Date","process","nextTick","getBrowserId","takeScreenshot","forEach","browserId","test","parseFloat","_getBrowserId","toLowerCase","versions","latestVersion","createVersion","ApiClient","Math","max","useHttp","osBrowsers","concat","apply","Object","keys","map","os","device","os_version","getApiStatus","module","exports","createClient","Error"],"mappings":"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","sourcesContent":["var util = require(\"util\");\nvar BaseClient = require(\"./client\");\nvar extend = require(\"./extend\");\n\nfunction ApiBaseClient(settings) {\n\tthis.server = {\n\t\thost: \"api.browserstack.com\"\n\t};\n\tBaseClient.call(this, settings);\n}\n\nutil.inherits(ApiBaseClient, BaseClient);\n\n// public API\nextend(ApiBaseClient.prototype, {\n\tgetBrowsers: function(fn) {\n\t\tthis._getBrowsers(function(error, browsers) {\n\t\t\tif (!error) {\n\t\t\t\tthis.updateLatest(browsers);\n\t\t\t}\n\n\t\t\tfn(error, browsers);\n\t\t}.bind(this));\n\t},\n\n\tcreateWorker: function(options, fn) {\n\t\tif (options[this.versionField] === \"latest\") {\n\t\t\treturn this.getLatest(options, function(error, version) {\n\t\t\t\tif (error) {\n\t\t\t\t\treturn fn(error);\n\t\t\t\t}\n\n\t\t\t\toptions = extend({}, options);\n\t\t\t\toptions[this.versionField] = version;\n\t\t\t\tthis.createWorker(options, fn);\n\t\t\t}.bind(this));\n\t\t}\n\n\t\tvar data = JSON.stringify(options);\n\t\tthis.request({\n\t\t\tpath: this.path(\"/worker\"),\n\t\t\tmethod: \"POST\"\n\t\t}, data, fn);\n\t},\n\n\tgetWorker: function(id, fn) {\n\t\tthis.request({\n\t\t\tpath: this.path(\"/worker/\" + id)\n\t\t}, fn);\n\t},\n\n\tchangeUrl: function(id, options, fn) {\n\t\tvar data = JSON.stringify(options);\n\t\tthis.request({\n\t\t\tpath: this.path(\"/worker/\" + id + \"/url.json\"),\n\t\t\tmethod: \"PUT\"\n\t\t}, data, fn);\n\t},\n\n\tterminateWorker: function(id, fn) {\n\t\tthis.request({\n\t\t\tpath: this.path(\"/worker/\" + id),\n\t\t\tmethod: \"DELETE\"\n\t\t}, fn);\n\t},\n\n\tgetWorkers: function(fn) {\n\t\tthis.request({\n\t\t\tpath: this.path(\"/workers\")\n\t\t}, fn);\n\t},\n\n\tgetLatest: function(browser, fn) {\n\t\tvar latest = this.latest;\n\n\t\tif (typeof browser === \"function\") {\n\t\t\tfn = browser;\n\t\t\tbrowser = null;\n\t\t}\n\n\t\t// there may be a lot of createWorker() calls with \"latest\" version\n\t\t// so minimize the number of calls to getBrowsers()\n\t\tif (this.latestPending) {\n\t\t\treturn setTimeout(function() {\n\t\t\t\tthis.getLatest(browser, fn);\n\t\t\t}.bind(this), 50);\n\t\t}\n\n\t\t// only cache browsers for one day\n\t\tif (!latest || this.latestUpdate < (new Date() - 864e5)) {\n\t\t\tthis.latestPending = true;\n\t\t\treturn this.getBrowsers(function(error) {\n\t\t\t\tthis.latestPending = false;\n\n\t\t\t\tif (error) {\n\t\t\t\t\treturn fn(error);\n\t\t\t\t}\n\n\t\t\t\tthis.getLatest(browser, fn);\n\t\t\t}.bind(this));\n\t\t}\n\n\t\tprocess.nextTick(function() {\n\t\t\tfn(null, browser ? latest[this.getBrowserId(browser)] : extend({}, latest));\n\t\t}.bind(this));\n\t},\n\n\ttakeScreenshot: function(id, fn) {\n\t\tthis.request({\n\t\t\tpath: this.path(\"/worker/\" + id + \"/screenshot.json\")\n\t\t}, fn);\n\t}\n});\n\n// internal API\nextend(ApiBaseClient.prototype, {\n\tlatest: null,\n\tlatestUpdate: 0,\n\tlatestPending: false,\n\n\tpath: function(path) {\n\t\treturn \"/\" + this.version + path;\n\t},\n\n\tupdateLatest: function(browsers) {\n\t\tvar latest = this.latest = {};\n\t\tvar getBrowserId = this.getBrowserId.bind(this);\n\t\tvar versionField = this.versionField;\n\n\t\tthis.latestUpdate = new Date();\n\t\tbrowsers.forEach(function(browser) {\n\t\t\tvar version = browser[versionField];\n\t\t\tvar browserId = getBrowserId(browser);\n\n\t\t\t// ignore devices that don't have versions\n\t\t\tif (!version) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// ignore pre-release versions\n\t\t\tif (/\\s/.test(version)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (parseFloat(version) > (parseFloat(latest[browserId]) || 0)) {\n\t\t\t\tlatest[browserId] = version;\n\t\t\t}\n\t\t});\n\t},\n\n\tgetBrowserId: function(browser) {\n\t\treturn this._getBrowserId(browser).toLowerCase();\n\t}\n});\n\n// Versions\n\nApiBaseClient.versions = {};\nApiBaseClient.latestVersion = 0;\nApiBaseClient.createVersion = function(version, prototype) {\n\tfunction ApiClient(settings) {\n\t\tApiBaseClient.call(this, settings);\n\t}\n\n\tutil.inherits(ApiClient, ApiBaseClient);\n\n\tApiClient.prototype.version = version;\n\textend(ApiClient.prototype, prototype);\n\n\tApiBaseClient.versions[version] = ApiClient;\n\tApiBaseClient.latestVersion = Math.max(ApiBaseClient.latestVersion, version);\n};\n\nApiBaseClient.createVersion(1, {\n\tuseHttp: true,\n\n\tversionField: \"version\",\n\n\t_getBrowsers: function(fn) {\n\t\tthis.request({\n\t\t\tpath: this.path(\"/browsers\")\n\t\t}, fn);\n\t},\n\n\t_getBrowserId: function(browser) {\n\t\treturn browser.browser;\n\t}\n});\n\nApiBaseClient.createVersion(2, {\n\tuseHttp: true,\n\n\tversionField: \"version\",\n\n\t_getBrowsers: function(fn) {\n\t\tthis.request({\n\t\t\tpath: this.path(\"/browsers\")\n\t\t}, function(error, osBrowsers) {\n\t\t\tif (error) {\n\t\t\t\treturn fn(error);\n\t\t\t}\n\n\t\t\tfn(null, [].concat.apply([],\n\t\t\t\tObject.keys(osBrowsers).map(function(os) {\n\t\t\t\t\treturn osBrowsers[os].map(function(browser) {\n\t\t\t\t\t\tbrowser.os = os;\n\t\t\t\t\t\treturn browser;\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t));\n\t\t});\n\t},\n\n\t_getBrowserId: function(browser) {\n\t\treturn browser.os + \":\" + (browser.browser || browser.device);\n\t}\n});\n\nApiBaseClient.createVersion(3, {\n\tuseHttp: true,\n\n\tversionField: \"browser_version\",\n\n\t_getBrowsers: function(fn) {\n\t\tthis.request({\n\t\t\tpath: this.path(\"/browsers?flat=true\")\n\t\t}, fn);\n\t},\n\n\t_getBrowserId: function(browser) {\n\t\tvar id = browser.os + \":\" + browser.os_version + \":\" + browser.browser;\n\t\tif (browser.device) {\n\t\t\tid += \":\" + browser.device;\n\t\t}\n\n\t\treturn id;\n\t},\n\n\tgetApiStatus: function(fn) {\n\t\tthis.request({\n\t\t\tpath: this.path(\"/status\")\n\t\t}, fn);\n\t}\n});\n\nApiBaseClient.createVersion(4, {\n\tversionField: \"browser_version\",\n\n\t_getBrowsers: function(fn) {\n\t\tthis.request({\n\t\t\tpath: this.path(\"/browsers?flat=true\")\n\t\t}, fn);\n\t},\n\n\t_getBrowserId: function(browser) {\n\t\tvar id = browser.os + \":\" + browser.os_version + \":\" + browser.browser;\n\t\tif (browser.device) {\n\t\t\tid += \":\" + browser.device;\n\t\t}\n\n\t\treturn id;\n\t},\n\n\tgetApiStatus: function(fn) {\n\t\tthis.request({\n\t\t\tpath: this.path(\"/status\")\n\t\t}, fn);\n\t}\n});\n\nmodule.exports = {\n\tcreateClient: function(settings) {\n\t\tvar ApiClient = ApiBaseClient.versions[settings.version || ApiBaseClient.latestVersion];\n\t\tif (!ApiClient) {\n\t\t\tthrow new Error(\"Invalid version\");\n\t\t}\n\n\t\treturn new ApiClient(settings);\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}