{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:/Users/NeverMind/IntelliJIDEAProjects/argon-dashboard-angular-master/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar path_1 = require(\"path\");\n\nvar q_1 = require(\"q\");\n\nvar selenium_webdriver_1 = require(\"selenium-webdriver\");\n\nvar STACK_SUBSTRINGS_TO_FILTER = ['node_modules/jasmine/', 'node_modules/selenium-webdriver', 'at Module.', 'at Object.Module.', 'at Function.Module', '(timers.js:', 'jasminewd2/index.js', 'protractor/lib/'];\n/**\n * Utility function that filters a stack trace to be more readable. It removes\n * Jasmine test frames and webdriver promise resolution.\n * @param {string} text Original stack trace.\n * @return {string}\n */\n\nfunction filterStackTrace(text) {\n  if (!text) {\n    return text;\n  }\n\n  var lines = text.split(/\\n/).filter(function (line) {\n    var _iterator = _createForOfIteratorHelper(STACK_SUBSTRINGS_TO_FILTER),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var filter = _step.value;\n\n        if (line.indexOf(filter) !== -1) {\n          return false;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return true;\n  });\n  return lines.join('\\n');\n}\n\nexports.filterStackTrace = filterStackTrace;\n/**\n * Internal helper for abstraction of polymorphic filenameOrFn properties.\n * @param {object} filenameOrFn The filename or function that we will execute.\n * @param {Array.<object>}} args The args to pass into filenameOrFn.\n * @return {q.Promise} A promise that will resolve when filenameOrFn completes.\n */\n\nfunction runFilenameOrFn_(configDir, filenameOrFn, args) {\n  return q_1.Promise(function (resolvePromise) {\n    if (filenameOrFn && !(typeof filenameOrFn === 'string' || typeof filenameOrFn === 'function')) {\n      throw new Error('filenameOrFn must be a string or function');\n    }\n\n    if (typeof filenameOrFn === 'string') {\n      filenameOrFn = require(path_1.resolve(configDir, filenameOrFn));\n    }\n\n    if (typeof filenameOrFn === 'function') {\n      var results = q_1.when(filenameOrFn.apply(null, args), null, function (err) {\n        if (typeof err === 'string') {\n          err = new Error(err);\n        } else {\n          err = err;\n\n          if (!err.stack) {\n            err.stack = new Error().stack;\n          }\n        }\n\n        err.stack = exports.filterStackTrace(err.stack);\n        throw err;\n      });\n      resolvePromise(results);\n    } else {\n      resolvePromise(undefined);\n    }\n  });\n}\n\nexports.runFilenameOrFn_ = runFilenameOrFn_;\n/**\n * Joins two logs of test results, each following the format of <framework>.run\n * @param {object} log1\n * @param {object} log2\n * @return {object} The joined log\n */\n\nfunction joinTestLogs(log1, log2) {\n  return {\n    failedCount: log1.failedCount + log2.failedCount,\n    specResults: (log1.specResults || []).concat(log2.specResults || [])\n  };\n}\n\nexports.joinTestLogs = joinTestLogs;\n/**\n * Returns false if an error indicates a missing or stale element, re-throws\n * the error otherwise\n *\n * @param {*} The error to check\n * @throws {*} The error it was passed if it doesn't indicate a missing or stale\n *   element\n * @return {boolean} false, if it doesn't re-throw the error\n */\n\nfunction falseIfMissing(error) {\n  if (error instanceof selenium_webdriver_1.error.NoSuchElementError || error instanceof selenium_webdriver_1.error.StaleElementReferenceError) {\n    return false;\n  } else {\n    throw error;\n  }\n}\n\nexports.falseIfMissing = falseIfMissing;\n/**\n * Return a boolean given boolean value.\n *\n * @param {boolean} value\n * @returns {boolean} given value\n */\n\nfunction passBoolean(value) {\n  return value;\n}\n\nexports.passBoolean = passBoolean;","map":{"version":3,"sources":["C:/Users/NeverMind/IntelliJIDEAProjects/argon-dashboard-angular-master/node_modules/protractor/built/util.js"],"names":["Object","defineProperty","exports","value","path_1","require","q_1","selenium_webdriver_1","STACK_SUBSTRINGS_TO_FILTER","filterStackTrace","text","lines","split","filter","line","indexOf","join","runFilenameOrFn_","configDir","filenameOrFn","args","Promise","resolvePromise","Error","resolve","results","when","apply","err","stack","undefined","joinTestLogs","log1","log2","failedCount","specResults","concat","falseIfMissing","error","NoSuchElementError","StaleElementReferenceError","passBoolean"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst path_1 = require(\"path\");\nconst q_1 = require(\"q\");\nconst selenium_webdriver_1 = require(\"selenium-webdriver\");\nlet STACK_SUBSTRINGS_TO_FILTER = [\n    'node_modules/jasmine/', 'node_modules/selenium-webdriver', 'at Module.', 'at Object.Module.',\n    'at Function.Module', '(timers.js:', 'jasminewd2/index.js', 'protractor/lib/'\n];\n/**\n * Utility function that filters a stack trace to be more readable. It removes\n * Jasmine test frames and webdriver promise resolution.\n * @param {string} text Original stack trace.\n * @return {string}\n */\nfunction filterStackTrace(text) {\n    if (!text) {\n        return text;\n    }\n    let lines = text.split(/\\n/).filter((line) => {\n        for (let filter of STACK_SUBSTRINGS_TO_FILTER) {\n            if (line.indexOf(filter) !== -1) {\n                return false;\n            }\n        }\n        return true;\n    });\n    return lines.join('\\n');\n}\nexports.filterStackTrace = filterStackTrace;\n/**\n * Internal helper for abstraction of polymorphic filenameOrFn properties.\n * @param {object} filenameOrFn The filename or function that we will execute.\n * @param {Array.<object>}} args The args to pass into filenameOrFn.\n * @return {q.Promise} A promise that will resolve when filenameOrFn completes.\n */\nfunction runFilenameOrFn_(configDir, filenameOrFn, args) {\n    return q_1.Promise((resolvePromise) => {\n        if (filenameOrFn && !(typeof filenameOrFn === 'string' || typeof filenameOrFn === 'function')) {\n            throw new Error('filenameOrFn must be a string or function');\n        }\n        if (typeof filenameOrFn === 'string') {\n            filenameOrFn = require(path_1.resolve(configDir, filenameOrFn));\n        }\n        if (typeof filenameOrFn === 'function') {\n            let results = q_1.when(filenameOrFn.apply(null, args), null, (err) => {\n                if (typeof err === 'string') {\n                    err = new Error(err);\n                }\n                else {\n                    err = err;\n                    if (!err.stack) {\n                        err.stack = new Error().stack;\n                    }\n                }\n                err.stack = exports.filterStackTrace(err.stack);\n                throw err;\n            });\n            resolvePromise(results);\n        }\n        else {\n            resolvePromise(undefined);\n        }\n    });\n}\nexports.runFilenameOrFn_ = runFilenameOrFn_;\n/**\n * Joins two logs of test results, each following the format of <framework>.run\n * @param {object} log1\n * @param {object} log2\n * @return {object} The joined log\n */\nfunction joinTestLogs(log1, log2) {\n    return {\n        failedCount: log1.failedCount + log2.failedCount,\n        specResults: (log1.specResults || []).concat(log2.specResults || [])\n    };\n}\nexports.joinTestLogs = joinTestLogs;\n/**\n * Returns false if an error indicates a missing or stale element, re-throws\n * the error otherwise\n *\n * @param {*} The error to check\n * @throws {*} The error it was passed if it doesn't indicate a missing or stale\n *   element\n * @return {boolean} false, if it doesn't re-throw the error\n */\nfunction falseIfMissing(error) {\n    if ((error instanceof selenium_webdriver_1.error.NoSuchElementError) ||\n        (error instanceof selenium_webdriver_1.error.StaleElementReferenceError)) {\n        return false;\n    }\n    else {\n        throw error;\n    }\n}\nexports.falseIfMissing = falseIfMissing;\n/**\n * Return a boolean given boolean value.\n *\n * @param {boolean} value\n * @returns {boolean} given value\n */\nfunction passBoolean(value) {\n    return value;\n}\nexports.passBoolean = passBoolean;\n//# sourceMappingURL=util.js.map"]},"metadata":{},"sourceType":"script"}