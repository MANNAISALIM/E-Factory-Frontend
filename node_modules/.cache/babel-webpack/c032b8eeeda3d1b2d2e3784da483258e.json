{"ast":null,"code":"// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * @fileoverview Defines an environment agnostic {@linkplain cmd.Executor\n * command executor} that communicates with a remote end using JSON over HTTP.\n *\n * Clients should implement the {@link Client} interface, which is used by\n * the {@link Executor} to send commands to the remote end.\n */\n'use strict';\n\nvar _inherits = require(\"C:/Users/NeverMind/IntelliJIDEAProjects/argon-dashboard-angular-master/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:/Users/NeverMind/IntelliJIDEAProjects/argon-dashboard-angular-master/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _wrapNativeSuper = require(\"C:/Users/NeverMind/IntelliJIDEAProjects/argon-dashboard-angular-master/node_modules/@babel/runtime/helpers/wrapNativeSuper\");\n\nvar _classCallCheck = require(\"C:/Users/NeverMind/IntelliJIDEAProjects/argon-dashboard-angular-master/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/NeverMind/IntelliJIDEAProjects/argon-dashboard-angular-master/node_modules/@babel/runtime/helpers/createClass\");\n\nvar cmd = require('./command');\n\nvar error = require('./error');\n\nvar logging = require('./logging');\n\nvar promise = require('./promise');\n\nvar Session = require('./session').Session;\n\nvar WebElement = require('./webdriver').WebElement;\n\nvar _ref =\n/** @suppress {undefinedVars|uselessCode} */\nfunction () {\n  try {\n    return {\n      getAttribute: require('./atoms/get-attribute.js'),\n      isDisplayed: require('./atoms/is-displayed.js')\n    };\n  } catch (ex) {\n    throw Error('Failed to import atoms modules. If running in devmode, you need to run' + ' `./go node:atoms` from the project root: ' + ex);\n  }\n}(),\n    getAttribute = _ref.getAttribute,\n    isDisplayed = _ref.isDisplayed;\n/**\n * Converts a headers map to a HTTP header block string.\n * @param {!Map<string, string>} headers The map to convert.\n * @return {string} The headers as a string.\n */\n\n\nfunction headersToString(headers) {\n  var ret = [];\n  headers.forEach(function (value, name) {\n    ret.push(\"\".concat(name.toLowerCase(), \": \").concat(value));\n  });\n  return ret.join('\\n');\n}\n/**\n * Represents a HTTP request message. This class is a \"partial\" request and only\n * defines the path on the server to send a request to. It is each client's\n * responsibility to build the full URL for the final request.\n * @final\n */\n\n\nvar Request = /*#__PURE__*/function () {\n  /**\n   * @param {string} method The HTTP method to use for the request.\n   * @param {string} path The path on the server to send the request to.\n   * @param {Object=} opt_data This request's non-serialized JSON payload data.\n   */\n  function Request(method, path, opt_data) {\n    _classCallCheck(this, Request);\n\n    this.method =\n    /** string */\n    method;\n    this.path =\n    /** string */\n    path;\n    this.data =\n    /** Object */\n    opt_data;\n    this.headers =\n    /** !Map<string, string> */\n    new Map([['Accept', 'application/json; charset=utf-8']]);\n  }\n  /** @override */\n\n\n  _createClass(Request, [{\n    key: \"toString\",\n    value: function toString() {\n      var ret = \"\".concat(this.method, \" \").concat(this.path, \" HTTP/1.1\\n\");\n      ret += headersToString(this.headers) + '\\n\\n';\n\n      if (this.data) {\n        ret += JSON.stringify(this.data);\n      }\n\n      return ret;\n    }\n  }]);\n\n  return Request;\n}();\n/**\n * Represents a HTTP response message.\n * @final\n */\n\n\nvar Response = /*#__PURE__*/function () {\n  /**\n   * @param {number} status The response code.\n   * @param {!Object<string>} headers The response headers. All header names\n   *     will be converted to lowercase strings for consistent lookups.\n   * @param {string} body The response body.\n   */\n  function Response(status, headers, body) {\n    _classCallCheck(this, Response);\n\n    this.status =\n    /** number */\n    status;\n    this.body =\n    /** string */\n    body;\n    this.headers =\n    /** !Map<string, string>*/\n    new Map();\n\n    for (var header in headers) {\n      this.headers.set(header.toLowerCase(), headers[header]);\n    }\n  }\n  /** @override */\n\n\n  _createClass(Response, [{\n    key: \"toString\",\n    value: function toString() {\n      var ret = \"HTTP/1.1 \".concat(this.status, \"\\n\").concat(headersToString(this.headers), \"\\n\\n\");\n\n      if (this.body) {\n        ret += this.body;\n      }\n\n      return ret;\n    }\n  }]);\n\n  return Response;\n}();\n\nvar DEV_ROOT = '../../../../buck-out/gen/javascript/';\n/** @enum {!Function} */\n\nvar Atom = {\n  GET_ATTRIBUTE: getAttribute,\n  IS_DISPLAYED: isDisplayed\n};\nvar LOG = logging.getLogger('webdriver.http');\n\nfunction post(path) {\n  return resource('POST', path);\n}\n\nfunction del(path) {\n  return resource('DELETE', path);\n}\n\nfunction get(path) {\n  return resource('GET', path);\n}\n\nfunction resource(method, path) {\n  return {\n    method: method,\n    path: path\n  };\n}\n/** @typedef {{method: string, path: string}} */\n\n\nvar CommandSpec;\n/** @typedef {function(!cmd.Command): !Promise<!cmd.Command>} */\n\nvar CommandTransformer;\n\nvar InternalTypeError = /*#__PURE__*/function (_TypeError) {\n  _inherits(InternalTypeError, _TypeError);\n\n  var _super = _createSuper(InternalTypeError);\n\n  function InternalTypeError() {\n    _classCallCheck(this, InternalTypeError);\n\n    return _super.apply(this, arguments);\n  }\n\n  return InternalTypeError;\n}( /*#__PURE__*/_wrapNativeSuper(TypeError));\n/**\n * @param {!cmd.Command} command The initial command.\n * @param {Atom} atom The name of the atom to execute.\n * @return {!Promise<!cmd.Command>} The transformed command to execute.\n */\n\n\nfunction toExecuteAtomCommand(command, atom) {\n  for (var _len = arguments.length, params = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    params[_key - 2] = arguments[_key];\n  }\n\n  return new Promise(function (resolve, reject) {\n    if (typeof atom !== 'function') {\n      reject(new InternalTypeError('atom is not a function: ' + typeof atom));\n      return;\n    }\n\n    var newCmd = new cmd.Command(cmd.Name.EXECUTE_SCRIPT).setParameter('sessionId', command.getParameter('sessionId')).setParameter('script', \"return (\".concat(atom, \").apply(null, arguments)\")).setParameter('args', params.map(function (param) {\n      return command.getParameter(param);\n    }));\n    resolve(newCmd);\n  });\n}\n/** @const {!Map<string, CommandSpec>} */\n\n\nvar COMMAND_MAP = new Map([[cmd.Name.GET_SERVER_STATUS, get('/status')], [cmd.Name.NEW_SESSION, post('/session')], [cmd.Name.GET_SESSIONS, get('/sessions')], [cmd.Name.DESCRIBE_SESSION, get('/session/:sessionId')], [cmd.Name.QUIT, del('/session/:sessionId')], [cmd.Name.CLOSE, del('/session/:sessionId/window')], [cmd.Name.GET_CURRENT_WINDOW_HANDLE, get('/session/:sessionId/window_handle')], [cmd.Name.GET_WINDOW_HANDLES, get('/session/:sessionId/window_handles')], [cmd.Name.GET_CURRENT_URL, get('/session/:sessionId/url')], [cmd.Name.GET, post('/session/:sessionId/url')], [cmd.Name.GO_BACK, post('/session/:sessionId/back')], [cmd.Name.GO_FORWARD, post('/session/:sessionId/forward')], [cmd.Name.REFRESH, post('/session/:sessionId/refresh')], [cmd.Name.ADD_COOKIE, post('/session/:sessionId/cookie')], [cmd.Name.GET_ALL_COOKIES, get('/session/:sessionId/cookie')], [cmd.Name.DELETE_ALL_COOKIES, del('/session/:sessionId/cookie')], [cmd.Name.DELETE_COOKIE, del('/session/:sessionId/cookie/:name')], [cmd.Name.FIND_ELEMENT, post('/session/:sessionId/element')], [cmd.Name.FIND_ELEMENTS, post('/session/:sessionId/elements')], [cmd.Name.GET_ACTIVE_ELEMENT, post('/session/:sessionId/element/active')], [cmd.Name.FIND_CHILD_ELEMENT, post('/session/:sessionId/element/:id/element')], [cmd.Name.FIND_CHILD_ELEMENTS, post('/session/:sessionId/element/:id/elements')], [cmd.Name.CLEAR_ELEMENT, post('/session/:sessionId/element/:id/clear')], [cmd.Name.CLICK_ELEMENT, post('/session/:sessionId/element/:id/click')], [cmd.Name.SEND_KEYS_TO_ELEMENT, post('/session/:sessionId/element/:id/value')], [cmd.Name.SUBMIT_ELEMENT, post('/session/:sessionId/element/:id/submit')], [cmd.Name.GET_ELEMENT_TEXT, get('/session/:sessionId/element/:id/text')], [cmd.Name.GET_ELEMENT_TAG_NAME, get('/session/:sessionId/element/:id/name')], [cmd.Name.IS_ELEMENT_SELECTED, get('/session/:sessionId/element/:id/selected')], [cmd.Name.IS_ELEMENT_ENABLED, get('/session/:sessionId/element/:id/enabled')], [cmd.Name.IS_ELEMENT_DISPLAYED, get('/session/:sessionId/element/:id/displayed')], [cmd.Name.GET_ELEMENT_LOCATION, get('/session/:sessionId/element/:id/location')], [cmd.Name.GET_ELEMENT_SIZE, get('/session/:sessionId/element/:id/size')], [cmd.Name.GET_ELEMENT_ATTRIBUTE, get('/session/:sessionId/element/:id/attribute/:name')], [cmd.Name.GET_ELEMENT_VALUE_OF_CSS_PROPERTY, get('/session/:sessionId/element/:id/css/:propertyName')], [cmd.Name.ELEMENT_EQUALS, get('/session/:sessionId/element/:id/equals/:other')], [cmd.Name.TAKE_ELEMENT_SCREENSHOT, get('/session/:sessionId/element/:id/screenshot')], [cmd.Name.SWITCH_TO_WINDOW, post('/session/:sessionId/window')], [cmd.Name.MAXIMIZE_WINDOW, post('/session/:sessionId/window/current/maximize')], [cmd.Name.GET_WINDOW_POSITION, get('/session/:sessionId/window/current/position')], [cmd.Name.SET_WINDOW_POSITION, post('/session/:sessionId/window/current/position')], [cmd.Name.GET_WINDOW_SIZE, get('/session/:sessionId/window/current/size')], [cmd.Name.SET_WINDOW_SIZE, post('/session/:sessionId/window/current/size')], [cmd.Name.SWITCH_TO_FRAME, post('/session/:sessionId/frame')], [cmd.Name.GET_PAGE_SOURCE, get('/session/:sessionId/source')], [cmd.Name.GET_TITLE, get('/session/:sessionId/title')], [cmd.Name.EXECUTE_SCRIPT, post('/session/:sessionId/execute')], [cmd.Name.EXECUTE_ASYNC_SCRIPT, post('/session/:sessionId/execute_async')], [cmd.Name.SCREENSHOT, get('/session/:sessionId/screenshot')], [cmd.Name.GET_TIMEOUT, get('/session/:sessionId/timeouts')], [cmd.Name.SET_TIMEOUT, post('/session/:sessionId/timeouts')], [cmd.Name.MOVE_TO, post('/session/:sessionId/moveto')], [cmd.Name.CLICK, post('/session/:sessionId/click')], [cmd.Name.DOUBLE_CLICK, post('/session/:sessionId/doubleclick')], [cmd.Name.MOUSE_DOWN, post('/session/:sessionId/buttondown')], [cmd.Name.MOUSE_UP, post('/session/:sessionId/buttonup')], [cmd.Name.MOVE_TO, post('/session/:sessionId/moveto')], [cmd.Name.SEND_KEYS_TO_ACTIVE_ELEMENT, post('/session/:sessionId/keys')], [cmd.Name.TOUCH_SINGLE_TAP, post('/session/:sessionId/touch/click')], [cmd.Name.TOUCH_DOUBLE_TAP, post('/session/:sessionId/touch/doubleclick')], [cmd.Name.TOUCH_DOWN, post('/session/:sessionId/touch/down')], [cmd.Name.TOUCH_UP, post('/session/:sessionId/touch/up')], [cmd.Name.TOUCH_MOVE, post('/session/:sessionId/touch/move')], [cmd.Name.TOUCH_SCROLL, post('/session/:sessionId/touch/scroll')], [cmd.Name.TOUCH_LONG_PRESS, post('/session/:sessionId/touch/longclick')], [cmd.Name.TOUCH_FLICK, post('/session/:sessionId/touch/flick')], [cmd.Name.ACCEPT_ALERT, post('/session/:sessionId/accept_alert')], [cmd.Name.DISMISS_ALERT, post('/session/:sessionId/dismiss_alert')], [cmd.Name.GET_ALERT_TEXT, get('/session/:sessionId/alert_text')], [cmd.Name.SET_ALERT_TEXT, post('/session/:sessionId/alert_text')], [cmd.Name.SET_ALERT_CREDENTIALS, post('/session/:sessionId/alert/credentials')], [cmd.Name.GET_LOG, post('/session/:sessionId/log')], [cmd.Name.GET_AVAILABLE_LOG_TYPES, get('/session/:sessionId/log/types')], [cmd.Name.GET_SESSION_LOGS, post('/logs')], [cmd.Name.UPLOAD_FILE, post('/session/:sessionId/file')]]);\n/** @const {!Map<string, (CommandSpec|CommandTransformer)>} */\n\nvar W3C_COMMAND_MAP = new Map([[cmd.Name.GET_ACTIVE_ELEMENT, get('/session/:sessionId/element/active')], [cmd.Name.GET_ALERT_TEXT, get('/session/:sessionId/alert/text')], [cmd.Name.SET_ALERT_TEXT, post('/session/:sessionId/alert/text')], [cmd.Name.ACCEPT_ALERT, post('/session/:sessionId/alert/accept')], [cmd.Name.DISMISS_ALERT, post('/session/:sessionId/alert/dismiss')], [cmd.Name.GET_ELEMENT_ATTRIBUTE, function (cmd) {\n  return toExecuteAtomCommand(cmd, Atom.GET_ATTRIBUTE, 'id', 'name');\n}], [cmd.Name.GET_ELEMENT_LOCATION, get('/session/:sessionId/element/:id/rect')], [cmd.Name.GET_ELEMENT_SIZE, get('/session/:sessionId/element/:id/rect')], [cmd.Name.IS_ELEMENT_DISPLAYED, function (cmd) {\n  return toExecuteAtomCommand(cmd, Atom.IS_DISPLAYED, 'id');\n}], [cmd.Name.EXECUTE_SCRIPT, post('/session/:sessionId/execute/sync')], [cmd.Name.EXECUTE_ASYNC_SCRIPT, post('/session/:sessionId/execute/async')], [cmd.Name.MAXIMIZE_WINDOW, post('/session/:sessionId/window/maximize')], [cmd.Name.GET_WINDOW_POSITION, get('/session/:sessionId/window/position')], [cmd.Name.SET_WINDOW_POSITION, post('/session/:sessionId/window/position')], [cmd.Name.GET_WINDOW_SIZE, get('/session/:sessionId/window/size')], [cmd.Name.SET_WINDOW_SIZE, post('/session/:sessionId/window/size')], [cmd.Name.GET_CURRENT_WINDOW_HANDLE, get('/session/:sessionId/window')], [cmd.Name.GET_WINDOW_HANDLES, get('/session/:sessionId/window/handles')]]);\n/**\n * Handles sending HTTP messages to a remote end.\n *\n * @interface\n */\n\nvar Client = /*#__PURE__*/function () {\n  function Client() {\n    _classCallCheck(this, Client);\n  }\n\n  _createClass(Client, [{\n    key: \"send\",\n\n    /**\n     * Sends a request to the server. The client will automatically follow any\n     * redirects returned by the server, fulfilling the returned promise with the\n     * final response.\n     *\n     * @param {!Request} httpRequest The request to send.\n     * @return {!Promise<Response>} A promise that will be fulfilled with the\n     *     server's response.\n     */\n    value: function send(httpRequest) {}\n  }]);\n\n  return Client;\n}();\n\nvar CLIENTS =\n/** !WeakMap<!Executor, !(Client|IThenable<!Client>)> */\nnew WeakMap();\n/**\n * Sends a request using the given executor.\n * @param {!Executor} executor\n * @param {!Request} request\n * @return {!Promise<Response>}\n */\n\nfunction doSend(executor, request) {\n  var client = CLIENTS.get(executor);\n\n  if (promise.isPromise(client)) {\n    return client.then(function (client) {\n      CLIENTS.set(executor, client);\n      return client.send(request);\n    });\n  } else {\n    return client.send(request);\n  }\n}\n/**\n * @param {Map<string, CommandSpec>} customCommands\n *     A map of custom command definitions.\n * @param {boolean} w3c Whether to use W3C command mappings.\n * @param {!cmd.Command} command The command to resolve.\n * @return {!Promise<!Request>} A promise that will resolve with the\n *     command to execute.\n */\n\n\nfunction buildRequest(customCommands, w3c, command) {\n  LOG.finest(function () {\n    return \"Translating command: \".concat(command.getName());\n  });\n  var spec = customCommands && customCommands.get(command.getName());\n\n  if (spec) {\n    return toHttpRequest(spec);\n  }\n\n  if (w3c) {\n    spec = W3C_COMMAND_MAP.get(command.getName());\n\n    if (typeof spec === 'function') {\n      LOG.finest(function () {\n        return \"Transforming command for W3C: \".concat(command.getName());\n      });\n      return spec(command).then(function (newCommand) {\n        return buildRequest(customCommands, w3c, newCommand);\n      });\n    } else if (spec) {\n      return toHttpRequest(spec);\n    }\n  }\n\n  spec = COMMAND_MAP.get(command.getName());\n\n  if (spec) {\n    return toHttpRequest(spec);\n  }\n\n  return Promise.reject(new error.UnknownCommandError('Unrecognized command: ' + command.getName()));\n  /**\n   * @param {CommandSpec} resource\n   * @return {!Promise<!Request>}\n   */\n\n  function toHttpRequest(resource) {\n    LOG.finest(function () {\n      return \"Building HTTP request: \".concat(JSON.stringify(resource));\n    });\n    var parameters = command.getParameters();\n    var path = buildPath(resource.path, parameters);\n    return Promise.resolve(new Request(resource.method, path, parameters));\n  }\n}\n/**\n * A command executor that communicates with the server using JSON over HTTP.\n *\n * By default, each instance of this class will use the legacy wire protocol\n * from [Selenium project][json]. The executor will automatically switch to the\n * [W3C wire protocol][w3c] if the remote end returns a compliant response to\n * a new session command.\n *\n * [json]: https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol\n * [w3c]: https://w3c.github.io/webdriver/webdriver-spec.html\n *\n * @implements {cmd.Executor}\n */\n\n\nvar Executor = /*#__PURE__*/function () {\n  /**\n   * @param {!(Client|IThenable<!Client>)} client The client to use for sending\n   *     requests to the server, or a promise-like object that will resolve to\n   *     to the client.\n   */\n  function Executor(client) {\n    _classCallCheck(this, Executor);\n\n    CLIENTS.set(this, client);\n    /**\n     * Whether this executor should use the W3C wire protocol. The executor\n     * will automatically switch if the remote end sends a compliant response\n     * to a new session command, however, this property may be directly set to\n     * `true` to force the executor into W3C mode.\n     * @type {boolean}\n     */\n\n    this.w3c = false;\n    /** @private {Map<string, CommandSpec>} */\n\n    this.customCommands_ = null;\n    /** @private {!logging.Logger} */\n\n    this.log_ = logging.getLogger('webdriver.http.Executor');\n  }\n  /**\n   * Defines a new command for use with this executor. When a command is sent,\n   * the {@code path} will be preprocessed using the command's parameters; any\n   * path segments prefixed with \":\" will be replaced by the parameter of the\n   * same name. For example, given \"/person/:name\" and the parameters\n   * \"{name: 'Bob'}\", the final command path will be \"/person/Bob\".\n   *\n   * @param {string} name The command name.\n   * @param {string} method The HTTP method to use when sending this command.\n   * @param {string} path The path to send the command to, relative to\n   *     the WebDriver server's command root and of the form\n   *     \"/path/:variable/segment\".\n   */\n\n\n  _createClass(Executor, [{\n    key: \"defineCommand\",\n    value: function defineCommand(name, method, path) {\n      if (!this.customCommands_) {\n        this.customCommands_ = new Map();\n      }\n\n      this.customCommands_.set(name, {\n        method: method,\n        path: path\n      });\n    }\n    /** @override */\n\n  }, {\n    key: \"execute\",\n    value: function execute(command) {\n      var _this = this;\n\n      var request = buildRequest(this.customCommands_, this.w3c, command);\n      return request.then(function (request) {\n        _this.log_.finer(function () {\n          return \">>> \".concat(request.method, \" \").concat(request.path);\n        });\n\n        return doSend(_this, request).then(function (response) {\n          _this.log_.finer(function () {\n            return \">>>\\n\".concat(request, \"\\n<<<\\n\").concat(response);\n          });\n\n          var httpResponse =\n          /** @type {!Response} */\n          response;\n\n          var _parseHttpResponse = parseHttpResponse(command, httpResponse),\n              isW3C = _parseHttpResponse.isW3C,\n              value = _parseHttpResponse.value;\n\n          if (command.getName() === cmd.Name.NEW_SESSION || command.getName() === cmd.Name.DESCRIBE_SESSION) {\n            if (!value || !value.sessionId) {\n              throw new error.WebDriverError(\"Unable to parse new session response: \".concat(response.body));\n            } // The remote end is a W3C compliant server if there is no `status`\n            // field in the response. This is not applicable for the DESCRIBE_SESSION\n            // command, which is not defined in the W3C spec.\n\n\n            if (command.getName() === cmd.Name.NEW_SESSION) {\n              _this.w3c = _this.w3c || isW3C;\n            } // No implementations use the `capabilities` key yet...\n\n\n            var capabilities = value.capabilities || value.value;\n            return new Session(value.sessionId, capabilities);\n          }\n\n          return typeof value === 'undefined' ? null : value;\n        });\n      });\n    }\n  }]);\n\n  return Executor;\n}();\n/**\n * @param {string} str .\n * @return {?} .\n */\n\n\nfunction tryParse(str) {\n  try {\n    return JSON.parse(str);\n  } catch (ignored) {// Do nothing.\n  }\n}\n/**\n * Callback used to parse {@link Response} objects from a\n * {@link HttpClient}.\n *\n * @param {!cmd.Command} command The command the response is for.\n * @param {!Response} httpResponse The HTTP response to parse.\n * @return {{isW3C: boolean, value: ?}} An object describing the parsed\n *     response. This object will have two fields: `isW3C` indicates whether\n *     the response looks like it came from a remote end that conforms with the\n *     W3C WebDriver spec, and `value`, the actual response value.\n * @throws {WebDriverError} If the HTTP response is an error.\n */\n\n\nfunction parseHttpResponse(command, httpResponse) {\n  if (httpResponse.status < 200) {\n    // This should never happen, but throw the raw response so users report it.\n    throw new error.WebDriverError(\"Unexpected HTTP response:\\n\".concat(httpResponse));\n  }\n\n  var parsed = tryParse(httpResponse.body);\n\n  if (parsed && typeof parsed === 'object') {\n    var _value = parsed.value;\n    var isW3C = _value !== null && typeof _value === 'object' && typeof parsed.status === 'undefined';\n\n    if (!isW3C) {\n      error.checkLegacyResponse(parsed); // Adjust legacy new session responses to look like W3C to simplify\n      // later processing.\n\n      if (command.getName() === cmd.Name.NEW_SESSION || command.getName() == cmd.Name.DESCRIBE_SESSION) {\n        _value = parsed;\n      }\n    } else if (httpResponse.status > 399) {\n      error.throwDecodedError(_value);\n    }\n\n    return {\n      isW3C: isW3C,\n      value: _value\n    };\n  }\n\n  if (parsed !== undefined) {\n    return {\n      isW3C: false,\n      value: parsed\n    };\n  }\n\n  var value = httpResponse.body.replace(/\\r\\n/g, '\\n'); // 404 represents an unknown command; anything else > 399 is a generic unknown\n  // error.\n\n  if (httpResponse.status == 404) {\n    throw new error.UnsupportedOperationError(value);\n  } else if (httpResponse.status >= 400) {\n    throw new error.WebDriverError(value);\n  }\n\n  return {\n    isW3C: false,\n    value: value || null\n  };\n}\n/**\n * Builds a fully qualified path using the given set of command parameters. Each\n * path segment prefixed with ':' will be replaced by the value of the\n * corresponding parameter. All parameters spliced into the path will be\n * removed from the parameter map.\n * @param {string} path The original resource path.\n * @param {!Object<*>} parameters The parameters object to splice into the path.\n * @return {string} The modified path.\n */\n\n\nfunction buildPath(path, parameters) {\n  var pathParameters = path.match(/\\/:(\\w+)\\b/g);\n\n  if (pathParameters) {\n    for (var i = 0; i < pathParameters.length; ++i) {\n      var key = pathParameters[i].substring(2); // Trim the /:\n\n      if (key in parameters) {\n        var value = parameters[key];\n\n        if (WebElement.isId(value)) {\n          // When inserting a WebElement into the URL, only use its ID value,\n          // not the full JSON.\n          value = WebElement.extractId(value);\n        }\n\n        path = path.replace(pathParameters[i], '/' + value);\n        delete parameters[key];\n      } else {\n        throw new error.InvalidArgumentError('Missing required parameter: ' + key);\n      }\n    }\n  }\n\n  return path;\n} // PUBLIC API\n\n\nexports.Executor = Executor;\nexports.Client = Client;\nexports.Request = Request;\nexports.Response = Response;\nexports.buildPath = buildPath; // Exported for testing.","map":{"version":3,"sources":["C:/Users/NeverMind/IntelliJIDEAProjects/argon-dashboard-angular-master/node_modules/selenium-webdriver/lib/http.js"],"names":["cmd","require","error","logging","promise","Session","WebElement","getAttribute","isDisplayed","ex","Error","headersToString","headers","ret","forEach","value","name","push","toLowerCase","join","Request","method","path","opt_data","data","Map","JSON","stringify","Response","status","body","header","set","DEV_ROOT","Atom","GET_ATTRIBUTE","IS_DISPLAYED","LOG","getLogger","post","resource","del","get","CommandSpec","CommandTransformer","InternalTypeError","TypeError","toExecuteAtomCommand","command","atom","params","Promise","resolve","reject","newCmd","Command","Name","EXECUTE_SCRIPT","setParameter","getParameter","map","param","COMMAND_MAP","GET_SERVER_STATUS","NEW_SESSION","GET_SESSIONS","DESCRIBE_SESSION","QUIT","CLOSE","GET_CURRENT_WINDOW_HANDLE","GET_WINDOW_HANDLES","GET_CURRENT_URL","GET","GO_BACK","GO_FORWARD","REFRESH","ADD_COOKIE","GET_ALL_COOKIES","DELETE_ALL_COOKIES","DELETE_COOKIE","FIND_ELEMENT","FIND_ELEMENTS","GET_ACTIVE_ELEMENT","FIND_CHILD_ELEMENT","FIND_CHILD_ELEMENTS","CLEAR_ELEMENT","CLICK_ELEMENT","SEND_KEYS_TO_ELEMENT","SUBMIT_ELEMENT","GET_ELEMENT_TEXT","GET_ELEMENT_TAG_NAME","IS_ELEMENT_SELECTED","IS_ELEMENT_ENABLED","IS_ELEMENT_DISPLAYED","GET_ELEMENT_LOCATION","GET_ELEMENT_SIZE","GET_ELEMENT_ATTRIBUTE","GET_ELEMENT_VALUE_OF_CSS_PROPERTY","ELEMENT_EQUALS","TAKE_ELEMENT_SCREENSHOT","SWITCH_TO_WINDOW","MAXIMIZE_WINDOW","GET_WINDOW_POSITION","SET_WINDOW_POSITION","GET_WINDOW_SIZE","SET_WINDOW_SIZE","SWITCH_TO_FRAME","GET_PAGE_SOURCE","GET_TITLE","EXECUTE_ASYNC_SCRIPT","SCREENSHOT","GET_TIMEOUT","SET_TIMEOUT","MOVE_TO","CLICK","DOUBLE_CLICK","MOUSE_DOWN","MOUSE_UP","SEND_KEYS_TO_ACTIVE_ELEMENT","TOUCH_SINGLE_TAP","TOUCH_DOUBLE_TAP","TOUCH_DOWN","TOUCH_UP","TOUCH_MOVE","TOUCH_SCROLL","TOUCH_LONG_PRESS","TOUCH_FLICK","ACCEPT_ALERT","DISMISS_ALERT","GET_ALERT_TEXT","SET_ALERT_TEXT","SET_ALERT_CREDENTIALS","GET_LOG","GET_AVAILABLE_LOG_TYPES","GET_SESSION_LOGS","UPLOAD_FILE","W3C_COMMAND_MAP","Client","httpRequest","CLIENTS","WeakMap","doSend","executor","request","client","isPromise","then","send","buildRequest","customCommands","w3c","finest","getName","spec","toHttpRequest","newCommand","UnknownCommandError","parameters","getParameters","buildPath","Executor","customCommands_","log_","finer","response","httpResponse","parseHttpResponse","isW3C","sessionId","WebDriverError","capabilities","tryParse","str","parse","ignored","parsed","checkLegacyResponse","throwDecodedError","undefined","replace","UnsupportedOperationError","pathParameters","match","i","length","key","substring","isId","extractId","InvalidArgumentError","exports"],"mappings":"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","sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * @fileoverview Defines an environment agnostic {@linkplain cmd.Executor\n * command executor} that communicates with a remote end using JSON over HTTP.\n *\n * Clients should implement the {@link Client} interface, which is used by\n * the {@link Executor} to send commands to the remote end.\n */\n\n'use strict';\n\nconst cmd = require('./command');\nconst error = require('./error');\nconst logging = require('./logging');\nconst promise = require('./promise');\nconst Session = require('./session').Session;\nconst WebElement = require('./webdriver').WebElement;\n\nconst {getAttribute, isDisplayed} = /** @suppress {undefinedVars|uselessCode} */(function() {\n  try {\n    return {\n      getAttribute: require('./atoms/get-attribute.js'),\n      isDisplayed: require('./atoms/is-displayed.js')\n    };\n  } catch (ex) {\n    throw Error(\n        'Failed to import atoms modules. If running in devmode, you need to run'\n            + ' `./go node:atoms` from the project root: ' + ex);\n  }\n})();\n\n\n/**\n * Converts a headers map to a HTTP header block string.\n * @param {!Map<string, string>} headers The map to convert.\n * @return {string} The headers as a string.\n */\nfunction headersToString(headers) {\n  let ret = [];\n  headers.forEach(function(value, name) {\n    ret.push(`${name.toLowerCase()}: ${value}`);\n  });\n  return ret.join('\\n');\n}\n\n\n/**\n * Represents a HTTP request message. This class is a \"partial\" request and only\n * defines the path on the server to send a request to. It is each client's\n * responsibility to build the full URL for the final request.\n * @final\n */\nclass Request {\n  /**\n   * @param {string} method The HTTP method to use for the request.\n   * @param {string} path The path on the server to send the request to.\n   * @param {Object=} opt_data This request's non-serialized JSON payload data.\n   */\n  constructor(method, path, opt_data) {\n    this.method = /** string */method;\n    this.path = /** string */path;\n    this.data = /** Object */opt_data;\n    this.headers = /** !Map<string, string> */new Map(\n        [['Accept', 'application/json; charset=utf-8']]);\n  }\n\n  /** @override */\n  toString() {\n    let ret = `${this.method} ${this.path} HTTP/1.1\\n`;\n    ret += headersToString(this.headers) + '\\n\\n';\n    if (this.data) {\n      ret += JSON.stringify(this.data);\n    }\n    return ret;\n  }\n}\n\n\n/**\n * Represents a HTTP response message.\n * @final\n */\nclass Response {\n  /**\n   * @param {number} status The response code.\n   * @param {!Object<string>} headers The response headers. All header names\n   *     will be converted to lowercase strings for consistent lookups.\n   * @param {string} body The response body.\n   */\n  constructor(status, headers, body) {\n    this.status = /** number */status;\n    this.body = /** string */body;\n    this.headers = /** !Map<string, string>*/new Map;\n    for (let header in headers) {\n      this.headers.set(header.toLowerCase(), headers[header]);\n    }\n  }\n\n  /** @override */\n  toString() {\n    let ret = `HTTP/1.1 ${this.status}\\n${headersToString(this.headers)}\\n\\n`;\n    if (this.body) {\n      ret += this.body;\n    }\n    return ret;\n  }\n}\n\n\nconst DEV_ROOT = '../../../../buck-out/gen/javascript/';\n\n/** @enum {!Function} */\nconst Atom = {\n  GET_ATTRIBUTE: getAttribute,\n  IS_DISPLAYED: isDisplayed\n};\n\n\nconst LOG = logging.getLogger('webdriver.http');\n\n\nfunction post(path) { return resource('POST', path); }\nfunction del(path)  { return resource('DELETE', path); }\nfunction get(path)  { return resource('GET', path); }\nfunction resource(method, path) { return {method: method, path: path}; }\n\n\n/** @typedef {{method: string, path: string}} */\nvar CommandSpec;\n\n\n/** @typedef {function(!cmd.Command): !Promise<!cmd.Command>} */\nvar CommandTransformer;\n\n\nclass InternalTypeError extends TypeError {}\n\n\n/**\n * @param {!cmd.Command} command The initial command.\n * @param {Atom} atom The name of the atom to execute.\n * @return {!Promise<!cmd.Command>} The transformed command to execute.\n */\nfunction toExecuteAtomCommand(command, atom, ...params) {\n  return new Promise((resolve, reject) => {\n    if (typeof atom !== 'function') {\n      reject(new InternalTypeError('atom is not a function: ' + typeof atom));\n      return;\n    }\n\n    let newCmd = new cmd.Command(cmd.Name.EXECUTE_SCRIPT)\n        .setParameter('sessionId', command.getParameter('sessionId'))\n        .setParameter('script', `return (${atom}).apply(null, arguments)`)\n        .setParameter('args', params.map(param => command.getParameter(param)));\n    resolve(newCmd);\n  });\n}\n\n\n\n/** @const {!Map<string, CommandSpec>} */\nconst COMMAND_MAP = new Map([\n    [cmd.Name.GET_SERVER_STATUS, get('/status')],\n    [cmd.Name.NEW_SESSION, post('/session')],\n    [cmd.Name.GET_SESSIONS, get('/sessions')],\n    [cmd.Name.DESCRIBE_SESSION, get('/session/:sessionId')],\n    [cmd.Name.QUIT, del('/session/:sessionId')],\n    [cmd.Name.CLOSE, del('/session/:sessionId/window')],\n    [cmd.Name.GET_CURRENT_WINDOW_HANDLE, get('/session/:sessionId/window_handle')],\n    [cmd.Name.GET_WINDOW_HANDLES, get('/session/:sessionId/window_handles')],\n    [cmd.Name.GET_CURRENT_URL, get('/session/:sessionId/url')],\n    [cmd.Name.GET, post('/session/:sessionId/url')],\n    [cmd.Name.GO_BACK, post('/session/:sessionId/back')],\n    [cmd.Name.GO_FORWARD, post('/session/:sessionId/forward')],\n    [cmd.Name.REFRESH, post('/session/:sessionId/refresh')],\n    [cmd.Name.ADD_COOKIE, post('/session/:sessionId/cookie')],\n    [cmd.Name.GET_ALL_COOKIES, get('/session/:sessionId/cookie')],\n    [cmd.Name.DELETE_ALL_COOKIES, del('/session/:sessionId/cookie')],\n    [cmd.Name.DELETE_COOKIE, del('/session/:sessionId/cookie/:name')],\n    [cmd.Name.FIND_ELEMENT, post('/session/:sessionId/element')],\n    [cmd.Name.FIND_ELEMENTS, post('/session/:sessionId/elements')],\n    [cmd.Name.GET_ACTIVE_ELEMENT, post('/session/:sessionId/element/active')],\n    [cmd.Name.FIND_CHILD_ELEMENT, post('/session/:sessionId/element/:id/element')],\n    [cmd.Name.FIND_CHILD_ELEMENTS, post('/session/:sessionId/element/:id/elements')],\n    [cmd.Name.CLEAR_ELEMENT, post('/session/:sessionId/element/:id/clear')],\n    [cmd.Name.CLICK_ELEMENT, post('/session/:sessionId/element/:id/click')],\n    [cmd.Name.SEND_KEYS_TO_ELEMENT, post('/session/:sessionId/element/:id/value')],\n    [cmd.Name.SUBMIT_ELEMENT, post('/session/:sessionId/element/:id/submit')],\n    [cmd.Name.GET_ELEMENT_TEXT, get('/session/:sessionId/element/:id/text')],\n    [cmd.Name.GET_ELEMENT_TAG_NAME, get('/session/:sessionId/element/:id/name')],\n    [cmd.Name.IS_ELEMENT_SELECTED, get('/session/:sessionId/element/:id/selected')],\n    [cmd.Name.IS_ELEMENT_ENABLED, get('/session/:sessionId/element/:id/enabled')],\n    [cmd.Name.IS_ELEMENT_DISPLAYED, get('/session/:sessionId/element/:id/displayed')],\n    [cmd.Name.GET_ELEMENT_LOCATION, get('/session/:sessionId/element/:id/location')],\n    [cmd.Name.GET_ELEMENT_SIZE, get('/session/:sessionId/element/:id/size')],\n    [cmd.Name.GET_ELEMENT_ATTRIBUTE, get('/session/:sessionId/element/:id/attribute/:name')],\n    [cmd.Name.GET_ELEMENT_VALUE_OF_CSS_PROPERTY, get('/session/:sessionId/element/:id/css/:propertyName')],\n    [cmd.Name.ELEMENT_EQUALS, get('/session/:sessionId/element/:id/equals/:other')],\n    [cmd.Name.TAKE_ELEMENT_SCREENSHOT, get('/session/:sessionId/element/:id/screenshot')],\n    [cmd.Name.SWITCH_TO_WINDOW, post('/session/:sessionId/window')],\n    [cmd.Name.MAXIMIZE_WINDOW, post('/session/:sessionId/window/current/maximize')],\n    [cmd.Name.GET_WINDOW_POSITION, get('/session/:sessionId/window/current/position')],\n    [cmd.Name.SET_WINDOW_POSITION, post('/session/:sessionId/window/current/position')],\n    [cmd.Name.GET_WINDOW_SIZE, get('/session/:sessionId/window/current/size')],\n    [cmd.Name.SET_WINDOW_SIZE, post('/session/:sessionId/window/current/size')],\n    [cmd.Name.SWITCH_TO_FRAME, post('/session/:sessionId/frame')],\n    [cmd.Name.GET_PAGE_SOURCE, get('/session/:sessionId/source')],\n    [cmd.Name.GET_TITLE, get('/session/:sessionId/title')],\n    [cmd.Name.EXECUTE_SCRIPT, post('/session/:sessionId/execute')],\n    [cmd.Name.EXECUTE_ASYNC_SCRIPT, post('/session/:sessionId/execute_async')],\n    [cmd.Name.SCREENSHOT, get('/session/:sessionId/screenshot')],\n    [cmd.Name.GET_TIMEOUT, get('/session/:sessionId/timeouts')],\n    [cmd.Name.SET_TIMEOUT, post('/session/:sessionId/timeouts')],\n    [cmd.Name.MOVE_TO, post('/session/:sessionId/moveto')],\n    [cmd.Name.CLICK, post('/session/:sessionId/click')],\n    [cmd.Name.DOUBLE_CLICK, post('/session/:sessionId/doubleclick')],\n    [cmd.Name.MOUSE_DOWN, post('/session/:sessionId/buttondown')],\n    [cmd.Name.MOUSE_UP, post('/session/:sessionId/buttonup')],\n    [cmd.Name.MOVE_TO, post('/session/:sessionId/moveto')],\n    [cmd.Name.SEND_KEYS_TO_ACTIVE_ELEMENT, post('/session/:sessionId/keys')],\n    [cmd.Name.TOUCH_SINGLE_TAP, post('/session/:sessionId/touch/click')],\n    [cmd.Name.TOUCH_DOUBLE_TAP, post('/session/:sessionId/touch/doubleclick')],\n    [cmd.Name.TOUCH_DOWN, post('/session/:sessionId/touch/down')],\n    [cmd.Name.TOUCH_UP, post('/session/:sessionId/touch/up')],\n    [cmd.Name.TOUCH_MOVE, post('/session/:sessionId/touch/move')],\n    [cmd.Name.TOUCH_SCROLL, post('/session/:sessionId/touch/scroll')],\n    [cmd.Name.TOUCH_LONG_PRESS, post('/session/:sessionId/touch/longclick')],\n    [cmd.Name.TOUCH_FLICK, post('/session/:sessionId/touch/flick')],\n    [cmd.Name.ACCEPT_ALERT, post('/session/:sessionId/accept_alert')],\n    [cmd.Name.DISMISS_ALERT, post('/session/:sessionId/dismiss_alert')],\n    [cmd.Name.GET_ALERT_TEXT, get('/session/:sessionId/alert_text')],\n    [cmd.Name.SET_ALERT_TEXT, post('/session/:sessionId/alert_text')],\n    [cmd.Name.SET_ALERT_CREDENTIALS, post('/session/:sessionId/alert/credentials')],\n    [cmd.Name.GET_LOG, post('/session/:sessionId/log')],\n    [cmd.Name.GET_AVAILABLE_LOG_TYPES, get('/session/:sessionId/log/types')],\n    [cmd.Name.GET_SESSION_LOGS, post('/logs')],\n    [cmd.Name.UPLOAD_FILE, post('/session/:sessionId/file')],\n]);\n\n\n/** @const {!Map<string, (CommandSpec|CommandTransformer)>} */\nconst W3C_COMMAND_MAP = new Map([\n  [cmd.Name.GET_ACTIVE_ELEMENT, get('/session/:sessionId/element/active')],\n  [cmd.Name.GET_ALERT_TEXT, get('/session/:sessionId/alert/text')],\n  [cmd.Name.SET_ALERT_TEXT, post('/session/:sessionId/alert/text')],\n  [cmd.Name.ACCEPT_ALERT, post('/session/:sessionId/alert/accept')],\n  [cmd.Name.DISMISS_ALERT, post('/session/:sessionId/alert/dismiss')],\n  [cmd.Name.GET_ELEMENT_ATTRIBUTE, (cmd) => {\n    return toExecuteAtomCommand(cmd, Atom.GET_ATTRIBUTE, 'id', 'name');\n  }],\n  [cmd.Name.GET_ELEMENT_LOCATION, get('/session/:sessionId/element/:id/rect')],\n  [cmd.Name.GET_ELEMENT_SIZE, get('/session/:sessionId/element/:id/rect')],\n  [cmd.Name.IS_ELEMENT_DISPLAYED, (cmd) => {\n    return toExecuteAtomCommand(cmd, Atom.IS_DISPLAYED, 'id');\n  }],\n  [cmd.Name.EXECUTE_SCRIPT, post('/session/:sessionId/execute/sync')],\n  [cmd.Name.EXECUTE_ASYNC_SCRIPT, post('/session/:sessionId/execute/async')],\n  [cmd.Name.MAXIMIZE_WINDOW, post('/session/:sessionId/window/maximize')],\n  [cmd.Name.GET_WINDOW_POSITION, get('/session/:sessionId/window/position')],\n  [cmd.Name.SET_WINDOW_POSITION, post('/session/:sessionId/window/position')],\n  [cmd.Name.GET_WINDOW_SIZE, get('/session/:sessionId/window/size')],\n  [cmd.Name.SET_WINDOW_SIZE, post('/session/:sessionId/window/size')],\n  [cmd.Name.GET_CURRENT_WINDOW_HANDLE, get('/session/:sessionId/window')],\n  [cmd.Name.GET_WINDOW_HANDLES, get('/session/:sessionId/window/handles')],\n]);\n\n\n/**\n * Handles sending HTTP messages to a remote end.\n *\n * @interface\n */\nclass Client {\n\n  /**\n   * Sends a request to the server. The client will automatically follow any\n   * redirects returned by the server, fulfilling the returned promise with the\n   * final response.\n   *\n   * @param {!Request} httpRequest The request to send.\n   * @return {!Promise<Response>} A promise that will be fulfilled with the\n   *     server's response.\n   */\n  send(httpRequest) {}\n}\n\n\nconst CLIENTS =\n    /** !WeakMap<!Executor, !(Client|IThenable<!Client>)> */new WeakMap;\n\n\n/**\n * Sends a request using the given executor.\n * @param {!Executor} executor\n * @param {!Request} request\n * @return {!Promise<Response>}\n */\nfunction doSend(executor, request) {\n  const client = CLIENTS.get(executor);\n  if (promise.isPromise(client)) {\n    return client.then(client => {\n      CLIENTS.set(executor, client);\n      return client.send(request);\n    });\n  } else {\n    return client.send(request);\n  }\n}\n\n\n/**\n * @param {Map<string, CommandSpec>} customCommands\n *     A map of custom command definitions.\n * @param {boolean} w3c Whether to use W3C command mappings.\n * @param {!cmd.Command} command The command to resolve.\n * @return {!Promise<!Request>} A promise that will resolve with the\n *     command to execute.\n */\nfunction buildRequest(customCommands, w3c, command) {\n  LOG.finest(() => `Translating command: ${command.getName()}`);\n  let spec = customCommands && customCommands.get(command.getName());\n  if (spec) {\n    return toHttpRequest(spec);\n  }\n\n  if (w3c) {\n    spec = W3C_COMMAND_MAP.get(command.getName());\n    if (typeof spec === 'function') {\n      LOG.finest(() => `Transforming command for W3C: ${command.getName()}`);\n      return spec(command)\n          .then(newCommand => buildRequest(customCommands, w3c, newCommand));\n    } else if (spec) {\n      return toHttpRequest(spec);\n    }\n  }\n\n  spec = COMMAND_MAP.get(command.getName());\n  if (spec) {\n    return toHttpRequest(spec);\n  }\n  return Promise.reject(\n      new error.UnknownCommandError(\n          'Unrecognized command: ' + command.getName()));\n\n  /**\n   * @param {CommandSpec} resource\n   * @return {!Promise<!Request>}\n   */\n  function toHttpRequest(resource) {\n    LOG.finest(() => `Building HTTP request: ${JSON.stringify(resource)}`);\n    let parameters = command.getParameters();\n    let path = buildPath(resource.path, parameters);\n    return Promise.resolve(new Request(resource.method, path, parameters));\n  }\n}\n\n\n/**\n * A command executor that communicates with the server using JSON over HTTP.\n *\n * By default, each instance of this class will use the legacy wire protocol\n * from [Selenium project][json]. The executor will automatically switch to the\n * [W3C wire protocol][w3c] if the remote end returns a compliant response to\n * a new session command.\n *\n * [json]: https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol\n * [w3c]: https://w3c.github.io/webdriver/webdriver-spec.html\n *\n * @implements {cmd.Executor}\n */\nclass Executor {\n  /**\n   * @param {!(Client|IThenable<!Client>)} client The client to use for sending\n   *     requests to the server, or a promise-like object that will resolve to\n   *     to the client.\n   */\n  constructor(client) {\n    CLIENTS.set(this, client);\n\n    /**\n     * Whether this executor should use the W3C wire protocol. The executor\n     * will automatically switch if the remote end sends a compliant response\n     * to a new session command, however, this property may be directly set to\n     * `true` to force the executor into W3C mode.\n     * @type {boolean}\n     */\n    this.w3c = false;\n\n    /** @private {Map<string, CommandSpec>} */\n    this.customCommands_ = null;\n\n    /** @private {!logging.Logger} */\n    this.log_ = logging.getLogger('webdriver.http.Executor');\n  }\n\n  /**\n   * Defines a new command for use with this executor. When a command is sent,\n   * the {@code path} will be preprocessed using the command's parameters; any\n   * path segments prefixed with \":\" will be replaced by the parameter of the\n   * same name. For example, given \"/person/:name\" and the parameters\n   * \"{name: 'Bob'}\", the final command path will be \"/person/Bob\".\n   *\n   * @param {string} name The command name.\n   * @param {string} method The HTTP method to use when sending this command.\n   * @param {string} path The path to send the command to, relative to\n   *     the WebDriver server's command root and of the form\n   *     \"/path/:variable/segment\".\n   */\n  defineCommand(name, method, path) {\n    if (!this.customCommands_) {\n      this.customCommands_ = new Map;\n    }\n    this.customCommands_.set(name, {method, path});\n  }\n\n  /** @override */\n  execute(command) {\n    let request = buildRequest(this.customCommands_, this.w3c, command);\n    return request.then(request => {\n      this.log_.finer(() => `>>> ${request.method} ${request.path}`);\n      return doSend(this, request).then(response => {\n        this.log_.finer(() => `>>>\\n${request}\\n<<<\\n${response}`);\n\n        let httpResponse = /** @type {!Response} */(response);\n        let {isW3C, value} = parseHttpResponse(command, httpResponse);\n\n        if (command.getName() === cmd.Name.NEW_SESSION\n            || command.getName() === cmd.Name.DESCRIBE_SESSION) {\n          if (!value || !value.sessionId) {\n            throw new error.WebDriverError(\n                `Unable to parse new session response: ${response.body}`);\n          }\n\n          // The remote end is a W3C compliant server if there is no `status`\n          // field in the response. This is not applicable for the DESCRIBE_SESSION\n          // command, which is not defined in the W3C spec.\n          if (command.getName() === cmd.Name.NEW_SESSION) {\n            this.w3c = this.w3c || isW3C;\n          }\n\n          // No implementations use the `capabilities` key yet...\n          let capabilities = value.capabilities || value.value;\n          return new Session(value.sessionId, capabilities);\n        }\n\n        return typeof value === 'undefined' ? null : value;\n      });\n    });\n  }\n}\n\n\n/**\n * @param {string} str .\n * @return {?} .\n */\nfunction tryParse(str) {\n  try {\n    return JSON.parse(str);\n  } catch (ignored) {\n    // Do nothing.\n  }\n}\n\n\n/**\n * Callback used to parse {@link Response} objects from a\n * {@link HttpClient}.\n *\n * @param {!cmd.Command} command The command the response is for.\n * @param {!Response} httpResponse The HTTP response to parse.\n * @return {{isW3C: boolean, value: ?}} An object describing the parsed\n *     response. This object will have two fields: `isW3C` indicates whether\n *     the response looks like it came from a remote end that conforms with the\n *     W3C WebDriver spec, and `value`, the actual response value.\n * @throws {WebDriverError} If the HTTP response is an error.\n */\nfunction parseHttpResponse(command, httpResponse) {\n  if (httpResponse.status < 200) {\n    // This should never happen, but throw the raw response so users report it.\n    throw new error.WebDriverError(\n        `Unexpected HTTP response:\\n${httpResponse}`);\n  }\n\n  let parsed = tryParse(httpResponse.body);\n  if (parsed && typeof parsed === 'object') {\n    let value = parsed.value;\n    let isW3C =\n        value !== null && typeof value === 'object'\n            && typeof parsed.status === 'undefined';\n\n    if (!isW3C) {\n      error.checkLegacyResponse(parsed);\n\n      // Adjust legacy new session responses to look like W3C to simplify\n      // later processing.\n      if (command.getName() === cmd.Name.NEW_SESSION\n          || command.getName() == cmd.Name.DESCRIBE_SESSION) {\n        value = parsed;\n      }\n\n    } else if (httpResponse.status > 399) {\n      error.throwDecodedError(value);\n    }\n\n    return {isW3C, value};\n  }\n\n  if (parsed !== undefined) {\n    return {isW3C: false, value: parsed};\n  }\n\n  let value = httpResponse.body.replace(/\\r\\n/g, '\\n');\n\n  // 404 represents an unknown command; anything else > 399 is a generic unknown\n  // error.\n  if (httpResponse.status == 404) {\n    throw new error.UnsupportedOperationError(value);\n  } else if (httpResponse.status >= 400) {\n    throw new error.WebDriverError(value);\n  }\n\n  return {isW3C: false, value: value || null};\n}\n\n\n/**\n * Builds a fully qualified path using the given set of command parameters. Each\n * path segment prefixed with ':' will be replaced by the value of the\n * corresponding parameter. All parameters spliced into the path will be\n * removed from the parameter map.\n * @param {string} path The original resource path.\n * @param {!Object<*>} parameters The parameters object to splice into the path.\n * @return {string} The modified path.\n */\nfunction buildPath(path, parameters) {\n  let pathParameters = path.match(/\\/:(\\w+)\\b/g);\n  if (pathParameters) {\n    for (let i = 0; i < pathParameters.length; ++i) {\n      let key = pathParameters[i].substring(2);  // Trim the /:\n      if (key in parameters) {\n        let value = parameters[key];\n        if (WebElement.isId(value)) {\n          // When inserting a WebElement into the URL, only use its ID value,\n          // not the full JSON.\n          value = WebElement.extractId(value);\n        }\n        path = path.replace(pathParameters[i], '/' + value);\n        delete parameters[key];\n      } else {\n        throw new error.InvalidArgumentError(\n            'Missing required parameter: ' + key);\n      }\n    }\n  }\n  return path;\n}\n\n\n// PUBLIC API\n\nexports.Executor = Executor;\nexports.Client = Client;\nexports.Request = Request;\nexports.Response = Response;\nexports.buildPath = buildPath;  // Exported for testing.\n"]},"metadata":{},"sourceType":"script"}