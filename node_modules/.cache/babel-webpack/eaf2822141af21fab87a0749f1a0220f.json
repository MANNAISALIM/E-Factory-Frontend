{"ast":null,"code":"\"use strict\";\n\nvar _createClass = require(\"C:/Users/NeverMind/IntelliJIDEAProjects/argon-dashboard-angular-master/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"C:/Users/NeverMind/IntelliJIDEAProjects/argon-dashboard-angular-master/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _inherits = require(\"C:/Users/NeverMind/IntelliJIDEAProjects/argon-dashboard-angular-master/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:/Users/NeverMind/IntelliJIDEAProjects/argon-dashboard-angular-master/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _wrapNativeSuper = require(\"C:/Users/NeverMind/IntelliJIDEAProjects/argon-dashboard-angular-master/node_modules/@babel/runtime/helpers/wrapNativeSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar CONFIG_ERROR_CODE = 105;\nvar BROWSER_CONNECT_ERROR_CODE = 135;\nvar KITCHEN_SINK_CODE = 199;\n\nvar IError = /*#__PURE__*/function (_Error) {\n  _inherits(IError, _Error);\n\n  var _super = _createSuper(IError);\n\n  function IError() {\n    _classCallCheck(this, IError);\n\n    return _super.apply(this, arguments);\n  }\n\n  return IError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nexports.IError = IError;\n\nvar ProtractorError = /*#__PURE__*/function (_IError) {\n  _inherits(ProtractorError, _IError);\n\n  var _super2 = _createSuper(ProtractorError);\n\n  function ProtractorError(logger, message, code, error) {\n    var _this;\n\n    _classCallCheck(this, ProtractorError);\n\n    _this = _super2.call(this, message);\n    _this.message = message;\n    _this.code = code; // replacing the stack trace with the thrown error stack trace.\n\n    if (error) {\n      var protractorError = error;\n      _this.stack = protractorError.stack;\n    }\n\n    ProtractorError.log(logger, _this.code, _this.message, _this.stack);\n\n    if (!ProtractorError.SUPRESS_EXIT_CODE) {\n      process.exit(_this.code);\n    }\n\n    return _this;\n  }\n\n  _createClass(ProtractorError, null, [{\n    key: \"log\",\n    value: function log(logger, code, message, stack) {\n      var messages = message.split('\\n');\n\n      if (messages.length > 1) {\n        message = messages[0];\n      }\n\n      logger.error('Error code: ' + code);\n      logger.error('Error message: ' + message);\n      logger.error(stack);\n    }\n  }]);\n\n  return ProtractorError;\n}(IError);\n\nProtractorError.CODE = KITCHEN_SINK_CODE;\nProtractorError.SUPRESS_EXIT_CODE = false;\nexports.ProtractorError = ProtractorError;\n/**\n * Configuration file error\n */\n\nvar ConfigError = /*#__PURE__*/function (_ProtractorError) {\n  _inherits(ConfigError, _ProtractorError);\n\n  var _super3 = _createSuper(ConfigError);\n\n  function ConfigError(logger, message, error) {\n    _classCallCheck(this, ConfigError);\n\n    return _super3.call(this, logger, message, ConfigError.CODE, error);\n  }\n\n  return ConfigError;\n}(ProtractorError);\n\nConfigError.CODE = CONFIG_ERROR_CODE;\nexports.ConfigError = ConfigError;\n/**\n * Browser errors including getting a driver session, direct connect, etc.\n */\n\nvar BrowserError = /*#__PURE__*/function (_ProtractorError2) {\n  _inherits(BrowserError, _ProtractorError2);\n\n  var _super4 = _createSuper(BrowserError);\n\n  function BrowserError(logger, message) {\n    _classCallCheck(this, BrowserError);\n\n    return _super4.call(this, logger, message, BrowserError.CODE);\n  }\n\n  return BrowserError;\n}(ProtractorError);\n\nBrowserError.CODE = BROWSER_CONNECT_ERROR_CODE;\nBrowserError.ERR_MSGS = ['ECONNREFUSED connect ECONNREFUSED', 'Sauce Labs Authentication Error', 'Invalid username or password'];\nexports.BrowserError = BrowserError;\n\nvar ErrorHandler = /*#__PURE__*/function () {\n  function ErrorHandler() {\n    _classCallCheck(this, ErrorHandler);\n  }\n\n  _createClass(ErrorHandler, null, [{\n    key: \"isError\",\n    value: function isError(errMsgs, e) {\n      if (errMsgs && errMsgs.length > 0) {\n        for (var errPos in errMsgs) {\n          var errMsg = errMsgs[errPos];\n\n          if (e.message && e.message.indexOf(errMsg) !== -1) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"parseError\",\n    value: function parseError(e) {\n      if (ErrorHandler.isError(ConfigError.ERR_MSGS, e)) {\n        return ConfigError.CODE;\n      }\n\n      if (ErrorHandler.isError(BrowserError.ERR_MSGS, e)) {\n        return BrowserError.CODE;\n      }\n\n      return null;\n    }\n  }]);\n\n  return ErrorHandler;\n}();\n\nexports.ErrorHandler = ErrorHandler;","map":{"version":3,"sources":["C:/Users/NeverMind/IntelliJIDEAProjects/argon-dashboard-angular-master/node_modules/protractor/built/exitCodes.js"],"names":["Object","defineProperty","exports","value","CONFIG_ERROR_CODE","BROWSER_CONNECT_ERROR_CODE","KITCHEN_SINK_CODE","IError","Error","ProtractorError","logger","message","code","error","protractorError","stack","log","SUPRESS_EXIT_CODE","process","exit","messages","split","length","CODE","ConfigError","BrowserError","ERR_MSGS","ErrorHandler","errMsgs","e","errPos","errMsg","indexOf","isError"],"mappings":"AAAA;;;;;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACA,IAAMC,iBAAiB,GAAG,GAA1B;AACA,IAAMC,0BAA0B,GAAG,GAAnC;AACA,IAAMC,iBAAiB,GAAG,GAA1B;;IACMC,M;;;;;;;;;;;;iCAAeC,K;;AAErBN,OAAO,CAACK,MAAR,GAAiBA,MAAjB;;IACME,e;;;;;AACF,2BAAYC,MAAZ,EAAoBC,OAApB,EAA6BC,IAA7B,EAAmCC,KAAnC,EAA0C;AAAA;;AAAA;;AACtC,+BAAMF,OAAN;AACA,UAAKA,OAAL,GAAeA,OAAf;AACA,UAAKC,IAAL,GAAYA,IAAZ,CAHsC,CAItC;;AACA,QAAIC,KAAJ,EAAW;AACP,UAAIC,eAAe,GAAGD,KAAtB;AACA,YAAKE,KAAL,GAAaD,eAAe,CAACC,KAA7B;AACH;;AACDN,IAAAA,eAAe,CAACO,GAAhB,CAAoBN,MAApB,EAA4B,MAAKE,IAAjC,EAAuC,MAAKD,OAA5C,EAAqD,MAAKI,KAA1D;;AACA,QAAI,CAACN,eAAe,CAACQ,iBAArB,EAAwC;AACpCC,MAAAA,OAAO,CAACC,IAAR,CAAa,MAAKP,IAAlB;AACH;;AAZqC;AAazC;;;;wBACUF,M,EAAQE,I,EAAMD,O,EAASI,K,EAAO;AACrC,UAAIK,QAAQ,GAAGT,OAAO,CAACU,KAAR,CAAc,IAAd,CAAf;;AACA,UAAID,QAAQ,CAACE,MAAT,GAAkB,CAAtB,EAAyB;AACrBX,QAAAA,OAAO,GAAGS,QAAQ,CAAC,CAAD,CAAlB;AACH;;AACDV,MAAAA,MAAM,CAACG,KAAP,CAAa,iBAAiBD,IAA9B;AACAF,MAAAA,MAAM,CAACG,KAAP,CAAa,oBAAoBF,OAAjC;AACAD,MAAAA,MAAM,CAACG,KAAP,CAAaE,KAAb;AACH;;;;EAvByBR,M;;AAyB9BE,eAAe,CAACc,IAAhB,GAAuBjB,iBAAvB;AACAG,eAAe,CAACQ,iBAAhB,GAAoC,KAApC;AACAf,OAAO,CAACO,eAAR,GAA0BA,eAA1B;AACA;AACA;AACA;;IACMe,W;;;;;AACF,uBAAYd,MAAZ,EAAoBC,OAApB,EAA6BE,KAA7B,EAAoC;AAAA;;AAAA,8BAC1BH,MAD0B,EAClBC,OADkB,EACTa,WAAW,CAACD,IADH,EACSV,KADT;AAEnC;;;EAHqBJ,e;;AAK1Be,WAAW,CAACD,IAAZ,GAAmBnB,iBAAnB;AACAF,OAAO,CAACsB,WAAR,GAAsBA,WAAtB;AACA;AACA;AACA;;IACMC,Y;;;;;AACF,wBAAYf,MAAZ,EAAoBC,OAApB,EAA6B;AAAA;;AAAA,8BACnBD,MADmB,EACXC,OADW,EACFc,YAAY,CAACF,IADX;AAE5B;;;EAHsBd,e;;AAK3BgB,YAAY,CAACF,IAAb,GAAoBlB,0BAApB;AACAoB,YAAY,CAACC,QAAb,GAAwB,CACpB,mCADoB,EACiB,iCADjB,EAEpB,8BAFoB,CAAxB;AAIAxB,OAAO,CAACuB,YAAR,GAAuBA,YAAvB;;IACME,Y;;;;;;;4BACaC,O,EAASC,C,EAAG;AACvB,UAAID,OAAO,IAAIA,OAAO,CAACN,MAAR,GAAiB,CAAhC,EAAmC;AAC/B,aAAK,IAAIQ,MAAT,IAAmBF,OAAnB,EAA4B;AACxB,cAAIG,MAAM,GAAGH,OAAO,CAACE,MAAD,CAApB;;AACA,cAAID,CAAC,CAAClB,OAAF,IAAakB,CAAC,CAAClB,OAAF,CAAUqB,OAAV,CAAkBD,MAAlB,MAA8B,CAAC,CAAhD,EAAmD;AAC/C,mBAAO,IAAP;AACH;AACJ;AACJ;;AACD,aAAO,KAAP;AACH;;;+BACiBF,C,EAAG;AACjB,UAAIF,YAAY,CAACM,OAAb,CAAqBT,WAAW,CAACE,QAAjC,EAA2CG,CAA3C,CAAJ,EAAmD;AAC/C,eAAOL,WAAW,CAACD,IAAnB;AACH;;AACD,UAAII,YAAY,CAACM,OAAb,CAAqBR,YAAY,CAACC,QAAlC,EAA4CG,CAA5C,CAAJ,EAAoD;AAChD,eAAOJ,YAAY,CAACF,IAApB;AACH;;AACD,aAAO,IAAP;AACH;;;;;;AAELrB,OAAO,CAACyB,YAAR,GAAuBA,YAAvB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst CONFIG_ERROR_CODE = 105;\nconst BROWSER_CONNECT_ERROR_CODE = 135;\nconst KITCHEN_SINK_CODE = 199;\nclass IError extends Error {\n}\nexports.IError = IError;\nclass ProtractorError extends IError {\n    constructor(logger, message, code, error) {\n        super(message);\n        this.message = message;\n        this.code = code;\n        // replacing the stack trace with the thrown error stack trace.\n        if (error) {\n            let protractorError = error;\n            this.stack = protractorError.stack;\n        }\n        ProtractorError.log(logger, this.code, this.message, this.stack);\n        if (!ProtractorError.SUPRESS_EXIT_CODE) {\n            process.exit(this.code);\n        }\n    }\n    static log(logger, code, message, stack) {\n        let messages = message.split('\\n');\n        if (messages.length > 1) {\n            message = messages[0];\n        }\n        logger.error('Error code: ' + code);\n        logger.error('Error message: ' + message);\n        logger.error(stack);\n    }\n}\nProtractorError.CODE = KITCHEN_SINK_CODE;\nProtractorError.SUPRESS_EXIT_CODE = false;\nexports.ProtractorError = ProtractorError;\n/**\n * Configuration file error\n */\nclass ConfigError extends ProtractorError {\n    constructor(logger, message, error) {\n        super(logger, message, ConfigError.CODE, error);\n    }\n}\nConfigError.CODE = CONFIG_ERROR_CODE;\nexports.ConfigError = ConfigError;\n/**\n * Browser errors including getting a driver session, direct connect, etc.\n */\nclass BrowserError extends ProtractorError {\n    constructor(logger, message) {\n        super(logger, message, BrowserError.CODE);\n    }\n}\nBrowserError.CODE = BROWSER_CONNECT_ERROR_CODE;\nBrowserError.ERR_MSGS = [\n    'ECONNREFUSED connect ECONNREFUSED', 'Sauce Labs Authentication Error',\n    'Invalid username or password'\n];\nexports.BrowserError = BrowserError;\nclass ErrorHandler {\n    static isError(errMsgs, e) {\n        if (errMsgs && errMsgs.length > 0) {\n            for (let errPos in errMsgs) {\n                let errMsg = errMsgs[errPos];\n                if (e.message && e.message.indexOf(errMsg) !== -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    static parseError(e) {\n        if (ErrorHandler.isError(ConfigError.ERR_MSGS, e)) {\n            return ConfigError.CODE;\n        }\n        if (ErrorHandler.isError(BrowserError.ERR_MSGS, e)) {\n            return BrowserError.CODE;\n        }\n        return null;\n    }\n}\nexports.ErrorHandler = ErrorHandler;\n//# sourceMappingURL=exitCodes.js.map"]},"metadata":{},"sourceType":"script"}