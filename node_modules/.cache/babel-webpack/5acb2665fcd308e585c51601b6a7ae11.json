{"ast":null,"code":"// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * @fileoverview Defines a {@linkplain Driver WebDriver} client for Microsoft's\n * Internet Explorer. Before using the IEDriver, you must download the latest\n * [IEDriverServer](http://selenium-release.storage.googleapis.com/index.html)\n * and place it on your\n * [PATH](http://en.wikipedia.org/wiki/PATH_%28variable%29). You must also apply\n * the system configuration outlined on the Selenium project\n * [wiki](https://github.com/SeleniumHQ/selenium/wiki/InternetExplorerDriver)\n */\n'use strict';\n\nvar _get = require(\"C:/Users/NeverMind/IntelliJIDEAProjects/argon-dashboard-angular-master/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"C:/Users/NeverMind/IntelliJIDEAProjects/argon-dashboard-angular-master/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:/Users/NeverMind/IntelliJIDEAProjects/argon-dashboard-angular-master/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:/Users/NeverMind/IntelliJIDEAProjects/argon-dashboard-angular-master/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _classCallCheck = require(\"C:/Users/NeverMind/IntelliJIDEAProjects/argon-dashboard-angular-master/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/NeverMind/IntelliJIDEAProjects/argon-dashboard-angular-master/node_modules/@babel/runtime/helpers/createClass\");\n\nvar fs = require('fs'),\n    util = require('util');\n\nvar http = require('./http'),\n    io = require('./io'),\n    capabilities = require('./lib/capabilities'),\n    promise = require('./lib/promise'),\n    webdriver = require('./lib/webdriver'),\n    portprober = require('./net/portprober'),\n    remote = require('./remote');\n\nvar IEDRIVER_EXE = 'IEDriverServer.exe';\n/**\n * IEDriverServer logging levels.\n * @enum {string}\n */\n\nvar Level = {\n  FATAL: 'FATAL',\n  ERROR: 'ERROR',\n  WARN: 'WARN',\n  INFO: 'INFO',\n  DEBUG: 'DEBUG',\n  TRACE: 'TRACE'\n};\n/**\n * Option keys:\n * https://github.com/SeleniumHQ/selenium/wiki/DesiredCapabilities#ie-specific\n * @enum {string}\n */\n\nvar Key = {\n  IGNORE_PROTECTED_MODE_SETTINGS: 'ignoreProtectedModeSettings',\n  IGNORE_ZOOM_SETTING: 'ignoreZoomSetting',\n  INITIAL_BROWSER_URL: 'initialBrowserUrl',\n  ENABLE_PERSISTENT_HOVER: 'enablePersistentHover',\n  ENABLE_ELEMENT_CACHE_CLEANUP: 'enableElementCacheCleanup',\n  REQUIRE_WINDOW_FOCUS: 'requireWindowFocus',\n  BROWSER_ATTACH_TIMEOUT: 'browserAttachTimeout',\n  FORCE_CREATE_PROCESS: 'ie.forceCreateProcessApi',\n  BROWSER_COMMAND_LINE_SWITCHES: 'ie.browserCommandLineSwitches',\n  USE_PER_PROCESS_PROXY: 'ie.usePerProcessProxy',\n  ENSURE_CLEAN_SESSION: 'ie.ensureCleanSession',\n  LOG_FILE: 'logFile',\n  LOG_LEVEL: 'logLevel',\n  HOST: 'host',\n  EXTRACT_PATH: 'extractPath',\n  SILENT: 'silent'\n};\n/**\n * Class for managing IEDriver specific options.\n */\n\nvar Options = /*#__PURE__*/function () {\n  function Options() {\n    _classCallCheck(this, Options);\n\n    /** @private {!Object<(boolean|number|string|!Array<string>)>} */\n    this.options_ = {};\n    /** @private {(capabilities.ProxyConfig|null)} */\n\n    this.proxy_ = null;\n  }\n  /**\n   * Extracts the IEDriver specific options from the given capabilities\n   * object.\n   * @param {!capabilities.Capabilities} caps The capabilities object.\n   * @return {!Options} The IEDriver options.\n   */\n\n\n  _createClass(Options, [{\n    key: \"introduceFlakinessByIgnoringProtectedModeSettings\",\n\n    /**\n     * Whether to disable the protected mode settings check when the session is\n     * created. Disbling this setting may lead to significant instability as the\n     * browser may become unresponsive/hang. Only \"best effort\" support is provided\n     * when using this capability.\n     *\n     * For more information, refer to the IEDriver's\n     * [required system configuration](http://goo.gl/eH0Yi3).\n     *\n     * @param {boolean} ignoreSettings Whether to ignore protected mode settings.\n     * @return {!Options} A self reference.\n     */\n    value: function introduceFlakinessByIgnoringProtectedModeSettings(ignoreSettings) {\n      this.options_[Key.IGNORE_PROTECTED_MODE_SETTINGS] = !!ignoreSettings;\n      return this;\n    }\n    /**\n     * Indicates whether to skip the check that the browser's zoom level is set to\n     * 100%.\n     *\n     * @param {boolean} ignore Whether to ignore the browser's zoom level settings.\n     * @return {!Options} A self reference.\n     */\n\n  }, {\n    key: \"ignoreZoomSetting\",\n    value: function ignoreZoomSetting(ignore) {\n      this.options_[Key.IGNORE_ZOOM_SETTING] = !!ignore;\n      return this;\n    }\n    /**\n     * Sets the initial URL loaded when IE starts. This is intended to be used with\n     * {@link #ignoreProtectedModeSettings} to allow the user to initialize IE in\n     * the proper Protected Mode zone. Setting this option may cause browser\n     * instability or flaky and unresponsive code. Only \"best effort\" support is\n     * provided when using this option.\n     *\n     * @param {string} url The initial browser URL.\n     * @return {!Options} A self reference.\n     */\n\n  }, {\n    key: \"initialBrowserUrl\",\n    value: function initialBrowserUrl(url) {\n      this.options_[Key.INITIAL_BROWSER_URL] = url;\n      return this;\n    }\n    /**\n     * Configures whether to enable persistent mouse hovering (true by default).\n     * Persistent hovering is achieved by continuously firing mouse over events at\n     * the last location the mouse cursor has been moved to.\n     *\n     * @param {boolean} enable Whether to enable persistent hovering.\n     * @return {!Options} A self reference.\n     */\n\n  }, {\n    key: \"enablePersistentHover\",\n    value: function enablePersistentHover(enable) {\n      this.options_[Key.ENABLE_PERSISTENT_HOVER] = !!enable;\n      return this;\n    }\n    /**\n     * Configures whether the driver should attempt to remove obsolete\n     * {@linkplain webdriver.WebElement WebElements} from its internal cache on\n     * page navigation (true by default). Disabling this option will cause the\n     * driver to run with a larger memory footprint.\n     *\n     * @param {boolean} enable Whether to enable element reference cleanup.\n     * @return {!Options} A self reference.\n     */\n\n  }, {\n    key: \"enableElementCacheCleanup\",\n    value: function enableElementCacheCleanup(enable) {\n      this.options_[Key.ENABLE_ELEMENT_CACHE_CLEANUP] = !!enable;\n      return this;\n    }\n    /**\n     * Configures whether to require the IE window to have input focus before\n     * performing any user interactions (i.e. mouse or keyboard events). This\n     * option is disabled by default, but delivers much more accurate interaction\n     * events when enabled.\n     *\n     * @param {boolean} require Whether to require window focus.\n     * @return {!Options} A self reference.\n     */\n\n  }, {\n    key: \"requireWindowFocus\",\n    value: function requireWindowFocus(require) {\n      this.options_[Key.REQUIRE_WINDOW_FOCUS] = !!require;\n      return this;\n    }\n    /**\n     * Configures the timeout, in milliseconds, that the driver will attempt to\n     * located and attach to a newly opened instance of Internet Explorer. The\n     * default is zero, which indicates waiting indefinitely.\n     *\n     * @param {number} timeout How long to wait for IE.\n     * @return {!Options} A self reference.\n     */\n\n  }, {\n    key: \"browserAttachTimeout\",\n    value: function browserAttachTimeout(timeout) {\n      this.options_[Key.BROWSER_ATTACH_TIMEOUT] = Math.max(timeout, 0);\n      return this;\n    }\n    /**\n     * Configures whether to launch Internet Explorer using the CreateProcess API.\n     * If this option is not specified, IE is launched using IELaunchURL, if\n     * available. For IE 8 and above, this option requires the TabProcGrowth\n     * registry value to be set to 0.\n     *\n     * @param {boolean} force Whether to use the CreateProcess API.\n     * @return {!Options} A self reference.\n     */\n\n  }, {\n    key: \"forceCreateProcessApi\",\n    value: function forceCreateProcessApi(force) {\n      this.options_[Key.FORCE_CREATE_PROCESS] = !!force;\n      return this;\n    }\n    /**\n     * Specifies command-line switches to use when launching Internet Explorer.\n     * This is only valid when used with {@link #forceCreateProcessApi}.\n     *\n     * @param {...(string|!Array.<string>)} var_args The arguments to add.\n     * @return {!Options} A self reference.\n     */\n\n  }, {\n    key: \"addArguments\",\n    value: function addArguments(var_args) {\n      var args = this.options_[Key.BROWSER_COMMAND_LINE_SWITCHES] || [];\n      args = args.concat.apply(args, arguments);\n      this.options_[Key.BROWSER_COMMAND_LINE_SWITCHES] = args;\n      return this;\n    }\n    /**\n     * Configures whether proxies should be configured on a per-process basis. If\n     * not set, setting a {@linkplain #setProxy proxy} will configure the system\n     * proxy. The default behavior is to use the system proxy.\n     *\n     * @param {boolean} enable Whether to enable per-process proxy settings.\n     * @return {!Options} A self reference.\n     */\n\n  }, {\n    key: \"usePerProcessProxy\",\n    value: function usePerProcessProxy(enable) {\n      this.options_[Key.USE_PER_PROCESS_PROXY] = !!enable;\n      return this;\n    }\n    /**\n     * Configures whether to clear the cache, cookies, history, and saved form data\n     * before starting the browser. _Using this capability will clear session data\n     * for all running instances of Internet Explorer, including those started\n     * manually._\n     *\n     * @param {boolean} cleanSession Whether to clear all session data on startup.\n     * @return {!Options} A self reference.\n     */\n\n  }, {\n    key: \"ensureCleanSession\",\n    value: function ensureCleanSession(cleanSession) {\n      this.options_[Key.ENSURE_CLEAN_SESSION] = !!cleanSession;\n      return this;\n    }\n    /**\n     * Sets the path to the log file the driver should log to.\n     * @param {string} file The log file path.\n     * @return {!Options} A self reference.\n     */\n\n  }, {\n    key: \"setLogFile\",\n    value: function setLogFile(file) {\n      this.options_[Key.LOG_FILE] = file;\n      return this;\n    }\n    /**\n     * Sets the IEDriverServer's logging {@linkplain Level level}.\n     * @param {Level} level The logging level.\n     * @return {!Options} A self reference.\n     */\n\n  }, {\n    key: \"setLogLevel\",\n    value: function setLogLevel(level) {\n      this.options_[Key.LOG_LEVEL] = level;\n      return this;\n    }\n    /**\n     * Sets the IP address of the driver's host adapter.\n     * @param {string} host The IP address to use.\n     * @return {!Options} A self reference.\n     */\n\n  }, {\n    key: \"setHost\",\n    value: function setHost(host) {\n      this.options_[Key.HOST] = host;\n      return this;\n    }\n    /**\n     * Sets the path of the temporary data directory to use.\n     * @param {string} path The log file path.\n     * @return {!Options} A self reference.\n     */\n\n  }, {\n    key: \"setExtractPath\",\n    value: function setExtractPath(path) {\n      this.options_[Key.EXTRACT_PATH] = path;\n      return this;\n    }\n    /**\n     * Sets whether the driver should start in silent mode.\n     * @param {boolean} silent Whether to run in silent mode.\n     * @return {!Options} A self reference.\n     */\n\n  }, {\n    key: \"silent\",\n    value: function silent(_silent) {\n      this.options_[Key.SILENT] = _silent;\n      return this;\n    }\n    /**\n     * Sets the proxy settings for the new session.\n     * @param {capabilities.ProxyConfig} proxy The proxy configuration to use.\n     * @return {!Options} A self reference.\n     */\n\n  }, {\n    key: \"setProxy\",\n    value: function setProxy(proxy) {\n      this.proxy_ = proxy;\n      return this;\n    }\n    /**\n     * Converts this options instance to a {@link capabilities.Capabilities}\n     * object.\n     * @param {capabilities.Capabilities=} opt_capabilities The capabilities to\n     *     merge these options into, if any.\n     * @return {!capabilities.Capabilities} The capabilities.\n     */\n\n  }, {\n    key: \"toCapabilities\",\n    value: function toCapabilities(opt_capabilities) {\n      var caps = opt_capabilities || capabilities.Capabilities.ie();\n\n      if (this.proxy_) {\n        caps.set(capabilities.Capability.PROXY, this.proxy_);\n      }\n\n      Object.keys(this.options_).forEach(function (key) {\n        caps.set(key, this.options_[key]);\n      }, this);\n      return caps;\n    }\n  }], [{\n    key: \"fromCapabilities\",\n    value: function fromCapabilities(caps) {\n      var options = new Options();\n      var map = options.options_;\n      Object.keys(Key).forEach(function (key) {\n        key = Key[key];\n\n        if (caps.has(key)) {\n          map[key] = caps.get(key);\n        }\n      });\n\n      if (caps.has(capabilities.Capability.PROXY)) {\n        options.setProxy(caps.get(capabilities.Capability.PROXY));\n      }\n\n      return options;\n    }\n  }]);\n\n  return Options;\n}();\n\nfunction createServiceFromCapabilities(capabilities) {\n  if (process.platform !== 'win32') {\n    throw Error('The IEDriver may only be used on Windows, but you appear to be on ' + process.platform + '. Did you mean to run against a remote ' + 'WebDriver server?');\n  }\n\n  var exe = io.findInPath(IEDRIVER_EXE, true);\n\n  if (!exe || !fs.existsSync(exe)) {\n    throw Error(\"\".concat(IEDRIVER_EXE, \" could not be found on the current PATH. Please \") + \"download the latest version of \".concat(IEDRIVER_EXE, \" from \") + 'http://selenium-release.storage.googleapis.com/index.html and ' + 'ensure it can be found on your system PATH.');\n  }\n\n  var args = [];\n\n  if (capabilities.has(Key.HOST)) {\n    args.push('--host=' + capabilities.get(Key.HOST));\n  }\n\n  if (capabilities.has(Key.LOG_FILE)) {\n    args.push('--log-file=' + capabilities.get(Key.LOG_FILE));\n  }\n\n  if (capabilities.has(Key.LOG_LEVEL)) {\n    args.push('--log-level=' + capabilities.get(Key.LOG_LEVEL));\n  }\n\n  if (capabilities.has(Key.EXTRACT_PATH)) {\n    args.push('--extract-path=' + capabilities.get(Key.EXTRACT_PATH));\n  }\n\n  if (capabilities.get(Key.SILENT)) {\n    args.push('--silent');\n  }\n\n  var port = portprober.findFreePort();\n  return new remote.DriverService(exe, {\n    loopback: true,\n    port: port,\n    args: port.then(function (port) {\n      return args.concat('--port=' + port);\n    }),\n    stdio: 'ignore'\n  });\n}\n/**\n * A WebDriver client for Microsoft's Internet Explorer.\n */\n\n\nvar Driver = /*#__PURE__*/function (_webdriver$WebDriver) {\n  _inherits(Driver, _webdriver$WebDriver);\n\n  var _super = _createSuper(Driver);\n\n  function Driver() {\n    _classCallCheck(this, Driver);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Driver, [{\n    key: \"setFileDetector\",\n\n    /**\n     * This function is a no-op as file detectors are not supported by this\n     * implementation.\n     * @override\n     */\n    value: function setFileDetector() {}\n  }], [{\n    key: \"createSession\",\n\n    /**\n     * Creates a new session for Microsoft's Internet Explorer.\n     *\n     * @param {(capabilities.Capabilities|Options)=} opt_config The configuration\n     *     options.\n     * @param {promise.ControlFlow=} opt_flow The control flow to use,\n     *     or {@code null} to use the currently active flow.\n     * @return {!Driver} A new driver instance.\n     */\n    value: function createSession(opt_config, opt_flow) {\n      var caps = opt_config instanceof Options ? opt_config.toCapabilities() : opt_config || capabilities.Capabilities.ie();\n      var service = createServiceFromCapabilities(caps);\n      var client = service.start().then(function (url) {\n        return new http.HttpClient(url);\n      });\n      var executor = new http.Executor(client);\n      return (\n        /** @type {!Driver} */\n        _get(_getPrototypeOf(Driver), \"createSession\", this).call(this, executor, caps, opt_flow, function () {\n          return service.kill();\n        })\n      );\n    }\n  }]);\n\n  return Driver;\n}(webdriver.WebDriver); // PUBLIC API\n\n\nexports.Driver = Driver;\nexports.Options = Options;\nexports.Level = Level;","map":{"version":3,"sources":["C:/Users/NeverMind/IntelliJIDEAProjects/argon-dashboard-angular-master/node_modules/selenium-webdriver/ie.js"],"names":["fs","require","util","http","io","capabilities","promise","webdriver","portprober","remote","IEDRIVER_EXE","Level","FATAL","ERROR","WARN","INFO","DEBUG","TRACE","Key","IGNORE_PROTECTED_MODE_SETTINGS","IGNORE_ZOOM_SETTING","INITIAL_BROWSER_URL","ENABLE_PERSISTENT_HOVER","ENABLE_ELEMENT_CACHE_CLEANUP","REQUIRE_WINDOW_FOCUS","BROWSER_ATTACH_TIMEOUT","FORCE_CREATE_PROCESS","BROWSER_COMMAND_LINE_SWITCHES","USE_PER_PROCESS_PROXY","ENSURE_CLEAN_SESSION","LOG_FILE","LOG_LEVEL","HOST","EXTRACT_PATH","SILENT","Options","options_","proxy_","ignoreSettings","ignore","url","enable","timeout","Math","max","force","var_args","args","concat","apply","arguments","cleanSession","file","level","host","path","silent","proxy","opt_capabilities","caps","Capabilities","ie","set","Capability","PROXY","Object","keys","forEach","key","options","map","has","get","setProxy","createServiceFromCapabilities","process","platform","Error","exe","findInPath","existsSync","push","port","findFreePort","DriverService","loopback","then","stdio","Driver","opt_config","opt_flow","toCapabilities","service","client","start","HttpClient","executor","Executor","kill","WebDriver","exports"],"mappings":"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","sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * @fileoverview Defines a {@linkplain Driver WebDriver} client for Microsoft's\n * Internet Explorer. Before using the IEDriver, you must download the latest\n * [IEDriverServer](http://selenium-release.storage.googleapis.com/index.html)\n * and place it on your\n * [PATH](http://en.wikipedia.org/wiki/PATH_%28variable%29). You must also apply\n * the system configuration outlined on the Selenium project\n * [wiki](https://github.com/SeleniumHQ/selenium/wiki/InternetExplorerDriver)\n */\n\n'use strict';\n\nconst fs = require('fs'),\n    util = require('util');\n\nconst http = require('./http'),\n    io = require('./io'),\n    capabilities = require('./lib/capabilities'),\n    promise = require('./lib/promise'),\n    webdriver = require('./lib/webdriver'),\n    portprober = require('./net/portprober'),\n    remote = require('./remote');\n\n\nconst IEDRIVER_EXE = 'IEDriverServer.exe';\n\n\n\n/**\n * IEDriverServer logging levels.\n * @enum {string}\n */\nconst Level = {\n  FATAL: 'FATAL',\n  ERROR: 'ERROR',\n  WARN: 'WARN',\n  INFO: 'INFO',\n  DEBUG: 'DEBUG',\n  TRACE: 'TRACE'\n};\n\n\n\n/**\n * Option keys:\n * https://github.com/SeleniumHQ/selenium/wiki/DesiredCapabilities#ie-specific\n * @enum {string}\n */\nconst Key = {\n  IGNORE_PROTECTED_MODE_SETTINGS: 'ignoreProtectedModeSettings',\n  IGNORE_ZOOM_SETTING: 'ignoreZoomSetting',\n  INITIAL_BROWSER_URL: 'initialBrowserUrl',\n  ENABLE_PERSISTENT_HOVER: 'enablePersistentHover',\n  ENABLE_ELEMENT_CACHE_CLEANUP: 'enableElementCacheCleanup',\n  REQUIRE_WINDOW_FOCUS: 'requireWindowFocus',\n  BROWSER_ATTACH_TIMEOUT: 'browserAttachTimeout',\n  FORCE_CREATE_PROCESS: 'ie.forceCreateProcessApi',\n  BROWSER_COMMAND_LINE_SWITCHES: 'ie.browserCommandLineSwitches',\n  USE_PER_PROCESS_PROXY: 'ie.usePerProcessProxy',\n  ENSURE_CLEAN_SESSION: 'ie.ensureCleanSession',\n  LOG_FILE: 'logFile',\n  LOG_LEVEL: 'logLevel',\n  HOST: 'host',\n  EXTRACT_PATH: 'extractPath',\n  SILENT: 'silent'\n};\n\n\n/**\n * Class for managing IEDriver specific options.\n */\nclass Options {\n  constructor() {\n    /** @private {!Object<(boolean|number|string|!Array<string>)>} */\n    this.options_ = {};\n\n    /** @private {(capabilities.ProxyConfig|null)} */\n    this.proxy_ = null;\n  }\n\n  /**\n   * Extracts the IEDriver specific options from the given capabilities\n   * object.\n   * @param {!capabilities.Capabilities} caps The capabilities object.\n   * @return {!Options} The IEDriver options.\n   */\n  static fromCapabilities(caps) {\n    var options = new Options();\n    var map = options.options_;\n\n    Object.keys(Key).forEach(function(key) {\n      key = Key[key];\n      if (caps.has(key)) {\n        map[key] = caps.get(key);\n      }\n    });\n\n    if (caps.has(capabilities.Capability.PROXY)) {\n      options.setProxy(caps.get(capabilities.Capability.PROXY));\n    }\n\n    return options;\n  }\n\n  /**\n   * Whether to disable the protected mode settings check when the session is\n   * created. Disbling this setting may lead to significant instability as the\n   * browser may become unresponsive/hang. Only \"best effort\" support is provided\n   * when using this capability.\n   *\n   * For more information, refer to the IEDriver's\n   * [required system configuration](http://goo.gl/eH0Yi3).\n   *\n   * @param {boolean} ignoreSettings Whether to ignore protected mode settings.\n   * @return {!Options} A self reference.\n   */\n  introduceFlakinessByIgnoringProtectedModeSettings(ignoreSettings) {\n    this.options_[Key.IGNORE_PROTECTED_MODE_SETTINGS] = !!ignoreSettings;\n    return this;\n  }\n\n  /**\n   * Indicates whether to skip the check that the browser's zoom level is set to\n   * 100%.\n   *\n   * @param {boolean} ignore Whether to ignore the browser's zoom level settings.\n   * @return {!Options} A self reference.\n   */\n  ignoreZoomSetting(ignore) {\n    this.options_[Key.IGNORE_ZOOM_SETTING] = !!ignore;\n    return this;\n  }\n\n  /**\n   * Sets the initial URL loaded when IE starts. This is intended to be used with\n   * {@link #ignoreProtectedModeSettings} to allow the user to initialize IE in\n   * the proper Protected Mode zone. Setting this option may cause browser\n   * instability or flaky and unresponsive code. Only \"best effort\" support is\n   * provided when using this option.\n   *\n   * @param {string} url The initial browser URL.\n   * @return {!Options} A self reference.\n   */\n  initialBrowserUrl(url) {\n    this.options_[Key.INITIAL_BROWSER_URL] = url;\n    return this;\n  }\n\n  /**\n   * Configures whether to enable persistent mouse hovering (true by default).\n   * Persistent hovering is achieved by continuously firing mouse over events at\n   * the last location the mouse cursor has been moved to.\n   *\n   * @param {boolean} enable Whether to enable persistent hovering.\n   * @return {!Options} A self reference.\n   */\n  enablePersistentHover(enable) {\n    this.options_[Key.ENABLE_PERSISTENT_HOVER] = !!enable;\n    return this;\n  }\n\n  /**\n   * Configures whether the driver should attempt to remove obsolete\n   * {@linkplain webdriver.WebElement WebElements} from its internal cache on\n   * page navigation (true by default). Disabling this option will cause the\n   * driver to run with a larger memory footprint.\n   *\n   * @param {boolean} enable Whether to enable element reference cleanup.\n   * @return {!Options} A self reference.\n   */\n  enableElementCacheCleanup(enable) {\n    this.options_[Key.ENABLE_ELEMENT_CACHE_CLEANUP] = !!enable;\n    return this;\n  }\n\n  /**\n   * Configures whether to require the IE window to have input focus before\n   * performing any user interactions (i.e. mouse or keyboard events). This\n   * option is disabled by default, but delivers much more accurate interaction\n   * events when enabled.\n   *\n   * @param {boolean} require Whether to require window focus.\n   * @return {!Options} A self reference.\n   */\n  requireWindowFocus(require) {\n    this.options_[Key.REQUIRE_WINDOW_FOCUS] = !!require;\n    return this;\n  }\n\n  /**\n   * Configures the timeout, in milliseconds, that the driver will attempt to\n   * located and attach to a newly opened instance of Internet Explorer. The\n   * default is zero, which indicates waiting indefinitely.\n   *\n   * @param {number} timeout How long to wait for IE.\n   * @return {!Options} A self reference.\n   */\n  browserAttachTimeout(timeout) {\n    this.options_[Key.BROWSER_ATTACH_TIMEOUT] = Math.max(timeout, 0);\n    return this;\n  }\n\n  /**\n   * Configures whether to launch Internet Explorer using the CreateProcess API.\n   * If this option is not specified, IE is launched using IELaunchURL, if\n   * available. For IE 8 and above, this option requires the TabProcGrowth\n   * registry value to be set to 0.\n   *\n   * @param {boolean} force Whether to use the CreateProcess API.\n   * @return {!Options} A self reference.\n   */\n  forceCreateProcessApi(force) {\n    this.options_[Key.FORCE_CREATE_PROCESS] = !!force;\n    return this;\n  }\n\n  /**\n   * Specifies command-line switches to use when launching Internet Explorer.\n   * This is only valid when used with {@link #forceCreateProcessApi}.\n   *\n   * @param {...(string|!Array.<string>)} var_args The arguments to add.\n   * @return {!Options} A self reference.\n   */\n  addArguments(var_args) {\n    var args = this.options_[Key.BROWSER_COMMAND_LINE_SWITCHES] || [];\n    args = args.concat.apply(args, arguments);\n    this.options_[Key.BROWSER_COMMAND_LINE_SWITCHES] = args;\n    return this;\n  }\n\n  /**\n   * Configures whether proxies should be configured on a per-process basis. If\n   * not set, setting a {@linkplain #setProxy proxy} will configure the system\n   * proxy. The default behavior is to use the system proxy.\n   *\n   * @param {boolean} enable Whether to enable per-process proxy settings.\n   * @return {!Options} A self reference.\n   */\n  usePerProcessProxy(enable) {\n    this.options_[Key.USE_PER_PROCESS_PROXY] = !!enable;\n    return this;\n  }\n\n  /**\n   * Configures whether to clear the cache, cookies, history, and saved form data\n   * before starting the browser. _Using this capability will clear session data\n   * for all running instances of Internet Explorer, including those started\n   * manually._\n   *\n   * @param {boolean} cleanSession Whether to clear all session data on startup.\n   * @return {!Options} A self reference.\n   */\n  ensureCleanSession(cleanSession) {\n    this.options_[Key.ENSURE_CLEAN_SESSION] = !!cleanSession;\n    return this;\n  }\n\n  /**\n   * Sets the path to the log file the driver should log to.\n   * @param {string} file The log file path.\n   * @return {!Options} A self reference.\n   */\n  setLogFile(file) {\n    this.options_[Key.LOG_FILE] = file;\n    return this;\n  }\n\n  /**\n   * Sets the IEDriverServer's logging {@linkplain Level level}.\n   * @param {Level} level The logging level.\n   * @return {!Options} A self reference.\n   */\n  setLogLevel(level) {\n    this.options_[Key.LOG_LEVEL] = level;\n    return this;\n  }\n\n  /**\n   * Sets the IP address of the driver's host adapter.\n   * @param {string} host The IP address to use.\n   * @return {!Options} A self reference.\n   */\n  setHost(host) {\n    this.options_[Key.HOST] = host;\n    return this;\n  }\n\n  /**\n   * Sets the path of the temporary data directory to use.\n   * @param {string} path The log file path.\n   * @return {!Options} A self reference.\n   */\n  setExtractPath(path) {\n    this.options_[Key.EXTRACT_PATH] = path;\n    return this;\n  }\n\n  /**\n   * Sets whether the driver should start in silent mode.\n   * @param {boolean} silent Whether to run in silent mode.\n   * @return {!Options} A self reference.\n   */\n  silent(silent) {\n    this.options_[Key.SILENT] = silent;\n    return this;\n  }\n\n  /**\n   * Sets the proxy settings for the new session.\n   * @param {capabilities.ProxyConfig} proxy The proxy configuration to use.\n   * @return {!Options} A self reference.\n   */\n  setProxy(proxy) {\n    this.proxy_ = proxy;\n    return this;\n  }\n\n  /**\n   * Converts this options instance to a {@link capabilities.Capabilities}\n   * object.\n   * @param {capabilities.Capabilities=} opt_capabilities The capabilities to\n   *     merge these options into, if any.\n   * @return {!capabilities.Capabilities} The capabilities.\n   */\n  toCapabilities(opt_capabilities) {\n    var caps = opt_capabilities || capabilities.Capabilities.ie();\n    if (this.proxy_) {\n      caps.set(capabilities.Capability.PROXY, this.proxy_);\n    }\n    Object.keys(this.options_).forEach(function(key) {\n      caps.set(key, this.options_[key]);\n    }, this);\n    return caps;\n  }\n}\n\n\nfunction createServiceFromCapabilities(capabilities) {\n  if (process.platform !== 'win32') {\n    throw Error(\n        'The IEDriver may only be used on Windows, but you appear to be on ' +\n        process.platform + '. Did you mean to run against a remote ' +\n        'WebDriver server?');\n  }\n\n  let exe = io.findInPath(IEDRIVER_EXE, true);\n  if (!exe || !fs.existsSync(exe)) {\n    throw Error(\n        `${IEDRIVER_EXE} could not be found on the current PATH. Please ` +\n        `download the latest version of ${IEDRIVER_EXE} from ` +\n        'http://selenium-release.storage.googleapis.com/index.html and ' +\n        'ensure it can be found on your system PATH.');\n  }\n\n  var args = [];\n  if (capabilities.has(Key.HOST)) {\n    args.push('--host=' + capabilities.get(Key.HOST));\n  }\n  if (capabilities.has(Key.LOG_FILE)) {\n    args.push('--log-file=' + capabilities.get(Key.LOG_FILE));\n  }\n  if (capabilities.has(Key.LOG_LEVEL)) {\n    args.push('--log-level=' + capabilities.get(Key.LOG_LEVEL));\n  }\n  if (capabilities.has(Key.EXTRACT_PATH)) {\n    args.push('--extract-path=' + capabilities.get(Key.EXTRACT_PATH));\n  }\n  if (capabilities.get(Key.SILENT)) {\n    args.push('--silent');\n  }\n\n  var port = portprober.findFreePort();\n  return new remote.DriverService(exe, {\n    loopback: true,\n    port: port,\n    args: port.then(function(port) {\n      return args.concat('--port=' + port);\n    }),\n    stdio: 'ignore'\n  });\n}\n\n\n/**\n * A WebDriver client for Microsoft's Internet Explorer.\n */\nclass Driver extends webdriver.WebDriver {\n  /**\n   * Creates a new session for Microsoft's Internet Explorer.\n   *\n   * @param {(capabilities.Capabilities|Options)=} opt_config The configuration\n   *     options.\n   * @param {promise.ControlFlow=} opt_flow The control flow to use,\n   *     or {@code null} to use the currently active flow.\n   * @return {!Driver} A new driver instance.\n   */\n  static createSession(opt_config, opt_flow) {\n    var caps = opt_config instanceof Options ?\n        opt_config.toCapabilities() :\n        (opt_config || capabilities.Capabilities.ie());\n\n    var service = createServiceFromCapabilities(caps);\n    var client = service.start().then(url => new http.HttpClient(url));\n    var executor = new http.Executor(client);\n\n    return /** @type {!Driver} */(super.createSession(\n        executor, caps, opt_flow, () => service.kill()));\n  }\n\n  /**\n   * This function is a no-op as file detectors are not supported by this\n   * implementation.\n   * @override\n   */\n  setFileDetector() {}\n}\n\n\n// PUBLIC API\n\n\nexports.Driver = Driver;\nexports.Options = Options;\nexports.Level = Level;\n"]},"metadata":{},"sourceType":"script"}