{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/NeverMind/IntelliJIDEAProjects/argon-dashboard-angular-master/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/NeverMind/IntelliJIDEAProjects/argon-dashboard-angular-master/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"C:/Users/NeverMind/IntelliJIDEAProjects/argon-dashboard-angular-master/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:/Users/NeverMind/IntelliJIDEAProjects/argon-dashboard-angular-master/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n *  This is an implementation of the Hosted Driver Provider.\n *  It is responsible for setting up the account object, tearing\n *  it down, and setting up the driver correctly.\n */\n\nvar q = require(\"q\");\n\nvar logger_1 = require(\"../logger\");\n\nvar driverProvider_1 = require(\"./driverProvider\");\n\nvar logger = new logger_1.Logger('hosted');\n\nvar Hosted = /*#__PURE__*/function (_driverProvider_1$Dri) {\n  _inherits(Hosted, _driverProvider_1$Dri);\n\n  var _super = _createSuper(Hosted);\n\n  function Hosted(config) {\n    _classCallCheck(this, Hosted);\n\n    return _super.call(this, config);\n  }\n  /**\n   * Configure and launch (if applicable) the object's environment.\n   * @public\n   * @return {q.promise} A promise which will resolve when the environment is\n   *     ready to test.\n   */\n\n\n  _createClass(Hosted, [{\n    key: \"setupDriverEnv\",\n    value: function setupDriverEnv() {\n      logger.info('Using the selenium server at ' + this.config_.seleniumAddress);\n      return q.fcall(function () {});\n    }\n  }]);\n\n  return Hosted;\n}(driverProvider_1.DriverProvider);\n\nexports.Hosted = Hosted;","map":{"version":3,"sources":["C:/Users/NeverMind/IntelliJIDEAProjects/argon-dashboard-angular-master/node_modules/protractor/built/driverProviders/hosted.js"],"names":["Object","defineProperty","exports","value","q","require","logger_1","driverProvider_1","logger","Logger","Hosted","config","info","config_","seleniumAddress","fcall","DriverProvider"],"mappings":"AAAA;;;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,CAAC,GAAGC,OAAO,CAAC,GAAD,CAAjB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,WAAD,CAAxB;;AACA,IAAME,gBAAgB,GAAGF,OAAO,CAAC,kBAAD,CAAhC;;AACA,IAAIG,MAAM,GAAG,IAAIF,QAAQ,CAACG,MAAb,CAAoB,QAApB,CAAb;;IACMC,M;;;;;AACF,kBAAYC,MAAZ,EAAoB;AAAA;;AAAA,6BACVA,MADU;AAEnB;AACD;AACJ;AACA;AACA;AACA;AACA;;;;;qCACqB;AACbH,MAAAA,MAAM,CAACI,IAAP,CAAY,kCAAkC,KAAKC,OAAL,CAAaC,eAA3D;AACA,aAAOV,CAAC,CAACW,KAAF,CAAQ,YAAY,CAAG,CAAvB,CAAP;AACH;;;;EAbgBR,gBAAgB,CAACS,c;;AAetCd,OAAO,CAACQ,MAAR,GAAiBA,MAAjB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n *  This is an implementation of the Hosted Driver Provider.\n *  It is responsible for setting up the account object, tearing\n *  it down, and setting up the driver correctly.\n */\nconst q = require(\"q\");\nconst logger_1 = require(\"../logger\");\nconst driverProvider_1 = require(\"./driverProvider\");\nlet logger = new logger_1.Logger('hosted');\nclass Hosted extends driverProvider_1.DriverProvider {\n    constructor(config) {\n        super(config);\n    }\n    /**\n     * Configure and launch (if applicable) the object's environment.\n     * @public\n     * @return {q.promise} A promise which will resolve when the environment is\n     *     ready to test.\n     */\n    setupDriverEnv() {\n        logger.info('Using the selenium server at ' + this.config_.seleniumAddress);\n        return q.fcall(function () { });\n    }\n}\nexports.Hosted = Hosted;\n//# sourceMappingURL=hosted.js.map"]},"metadata":{},"sourceType":"script"}