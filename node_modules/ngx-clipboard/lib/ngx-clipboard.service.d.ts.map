{"version":3,"file":"ngx-clipboard.service.d.ts","sources":["ngx-clipboard.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { Observable } from 'rxjs';\r\nimport { ClipboardParams, IClipboardResponse } from './interface';\r\n/**\r\n * The following code is heavily copied from https://github.com/zenorocha/clipboard.js\r\n */\r\nexport declare class ClipboardService {\r\n    document: any;\r\n    private window;\r\n    private copySubject;\r\n    copyResponse$: Observable<IClipboardResponse>;\r\n    private tempTextArea;\r\n    private config;\r\n    constructor(document: any, window: any);\r\n    configure(config: ClipboardParams): void;\r\n    copy(content: string): void;\r\n    get isSupported(): boolean;\r\n    isTargetValid(element: HTMLInputElement | HTMLTextAreaElement): boolean;\r\n    /**\r\n     * Attempts to copy from an input `targetElm`\r\n     */\r\n    copyFromInputElement(targetElm: HTMLInputElement | HTMLTextAreaElement, isFocus?: boolean): boolean;\r\n    /**\r\n     * This is a hack for IE11 to return `true` even if copy fails.\r\n     */\r\n    isCopySuccessInIE11(): boolean;\r\n    /**\r\n     * Creates a fake textarea element, sets its value from `text` property,\r\n     * and makes a selection on it.\r\n     */\r\n    copyFromContent(content: string, container?: HTMLElement): boolean;\r\n    /**\r\n     * Remove temporary textarea if any exists.\r\n     */\r\n    destroy(container?: HTMLElement): void;\r\n    /**\r\n     * Select the target html input element.\r\n     */\r\n    private selectTarget;\r\n    private copyText;\r\n    /**\r\n     * Moves focus away from `target` and back to the trigger, removes current selection.\r\n     */\r\n    private clearSelection;\r\n    /**\r\n     * Creates a fake textarea for copy command.\r\n     */\r\n    private createTempTextArea;\r\n    /**\r\n     * Pushes copy operation response to copySubject, to provide global access\r\n     * to the response.\r\n     */\r\n    pushCopyResponse(response: IClipboardResponse): void;\r\n    /**\r\n     * @deprecated use pushCopyResponse instead.\r\n     */\r\n    pushCopyReponse(response: IClipboardResponse): void;\r\n}\r\n"]}